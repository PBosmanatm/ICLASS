# -*- coding: utf-8 -*-
"""
Created on Tue Nov 26 17:12:49 2019

@author: Bosman Peter
"""
import forwardmodel as fwdm
import inverse_modelling as im
import copy as cp
import numpy as np

set_seed = False #Set the seed in case the output should be reproducable
if set_seed:
    seedvalue = 18 #the chosen value of the seed. No floating point numbers and no negative numbers 
    np.random.seed(seedvalue)

#what to run:
adjointtest_surf_lay = False #an adjoint test of the surface layer module, without time integration
gradtest_surf_lay = False
adjointtest_ribtol = False
gradtest_ribtol = False
adjointtest_ags = False
gradtest_ags = False
adjointtest_run_mixed_layer = False
gradtest_run_mixed_layer = False
adjointtest_int_mixed_layer = False
gradtest_int_mixed_layer = False
adjointtest_run_radiation = False
gradtest_run_radiation = False
adjointtest_run_land_surface = False
gradtest_run_land_surface = False
adjointtest_int_land_surface = False
gradtest_int_land_surface = False
adjointtest_statistics = False
gradtest_statistics = False
adjointtest_run_soil_COS_mod = False
gradtest_run_soil_COS_mod = False
adjointtest_store = False
gradtest_store = False
adjointtest_run_cumulus = False
gradtest_run_cumulus = False
adjointtest_jarvis_stewart = False
gradtest_jarvis_stewart = False
manual_adjointtest = False
adjointtest = False #this is over the full model run, so multiple timesteps normally (specify time settings in input)
gradtest = True #this is over the full model run, so multiple timesteps normally (specify time settings in input)
test_from_ref_paper = False
#gradient tests require the variable save_vars_indict (run function in forwardmodel.py) to be set to true, will be done automatically

#setting for printing
printmode = 'absolute' #the way the derivatives are printed for the gradient tests, 'relative' or 'absolute'
printmodeadj = 'relative' #the way the adjoint tests are printed, 'relative' or 'absolute'

testinput = fwdm.model_input()
testinput.COS        = 0.5 # initial mixed-layer COS [ppb]
testinput.COSmeasuring_height = 5.
testinput.COSmeasuring_height2 = 8.
testinput.COSmeasuring_height3 = 10.
testinput.CO2measuring_height = 1.
testinput.CO2measuring_height2 = 2.
testinput.CO2measuring_height3 = 3.
testinput.CO2measuring_height4 = 6.
testinput.Tmeasuring_height = 20.
testinput.Tmeasuring_height2 = 15.
testinput.Tmeasuring_height3 = 18.
testinput.Tmeasuring_height4 = 36.
testinput.Tmeasuring_height5 = 4.
testinput.Tmeasuring_height6 = 1.
testinput.Tmeasuring_height7 = 12.
testinput.qmeasuring_height = 9.
testinput.qmeasuring_height2 = 11.
testinput.qmeasuring_height3 = 1.
testinput.qmeasuring_height4 = 23.
testinput.qmeasuring_height5 = 16
testinput.qmeasuring_height6 = 33.
testinput.qmeasuring_height7 = 4.
testinput.gciCOS = 0.2 /(1.2*1000) * 28.9
testinput.sca_sto = 0.6
testinput.ags_C_mode = 'MXL' 
testinput.sw_useWilson  = False
testinput.dt         = 60       # time step [s]
testinput.runtime    = 300   # total run time [s]
testinput.sw_ml      = True      # mixed-layer model switch
testinput.sw_shearwe = False     # shear growth mixed-layer switch
testinput.sw_fixft   = False    # Fix the free-troposphere switch
testinput.h          = 500.      # initial ABL height [m]
testinput.Ps         = 101300.   # surface pressure [Pa]
testinput.divU       = 0.00000        # horizontal large-scale divergence of wind [s-1]
testinput.fc         = 1.e-4     # Coriolis parameter [m s-1]
testinput.theta      = 288.      # initial mixed-layer potential temperature [K]
testinput.deltatheta = 1.0       # initial temperature jump at h [K]
testinput.gammatheta = 0.006     # free atmosphere potential temperature lapse rate [K m-1]
testinput.gammatheta2= 0.008     # free atmosphere potential temperature lapse rate [K m-1]
testinput.htrans     = 900
testinput.advtheta   = 0.0001        # advection of heat [K s-1]
testinput.beta       = 0.2       # entrainment ratio for virtual heat [-]
testinput.wtheta     = 0.1       # surface kinematic heat flux [K m s-1]
testinput.q          = 0.008 +0.15    # initial mixed-layer specific humidity [kg kg-1]
testinput.deltaq     = -0.001    # initial specific humidity jump at h [kg kg-1]
testinput.gammaq     = -0.000001        # free atmosphere specific humidity lapse rate [kg kg-1 m-1]
testinput.advq       = 0.001e-3        # advection of moisture [kg kg-1 s-1]
testinput.wq         = 0.1e-3    # surface kinematic moisture flux [kg kg-1 m s-1] 
testinput.CO2        = 422.      # initial mixed-layer CO2 [ppm]
testinput.deltaCO2   = -44.      # initial CO2 jump at h [ppm]
testinput.deltaCOS   = -50.      # initial COS jump at h [ppb]
testinput.gammaCO2   = 0.0004        # free atmosphere CO2 lapse rate [ppm m-1]
testinput.gammaCOS   = 0.001        # free atmosphere COS lapse rate [ppb m-1]
testinput.advCO2     = 0.00004        # advection of CO2 [ppm s-1]
testinput.advCOS     = 0.00003        # advection of COS [ppb s-1]
testinput.wCO2       = 0.        # surface kinematic CO2 flux [ppm m s-1]
testinput.wCOS       = 0.000        # surface kinematic COS flux [ppb m s-1]
testinput.sw_wind    = True     # prognostic wind switch
testinput.u          = 6.        # initial mixed-layer u-wind speed [m s-1]
testinput.deltau     = 4.        # initial u-wind jump at h [m s-1]
testinput.gammau     = 0.000001        # free atmosphere u-wind speed lapse rate [s-1]
testinput.advu       = 0.        # advection of u-wind [m s-2]
testinput.v          = -4.0      # initial mixed-layer v-wind speed [m s-1]
testinput.deltav     = 4.0       # initial v-wind jump at h [m s-1]
testinput.gammav     = 0.        # free atmosphere v-wind speed lapse rate [s-1]
testinput.advv       = 0.        # advection of v-wind [m s-2]
testinput.sw_sl      = True     # surface layer switch
testinput.ustar      = 0.8       # surface friction velocity [m s-1]
testinput.z0m        = 0.1      # roughness length for momentum [m]
testinput.z0h        = 0.1     # roughness length for scalars [m]
testinput.sw_rad     = True     # radiation switch
testinput.Q          = 200  #net radiation [W m-2], not relevant if sw_rad == False
testinput.lat        = 31.97     # latitude [deg]
testinput.lon        = 0     # longitude [deg]
testinput.doy        = 150.      # day of the year [-]
testinput.tstart     = 10*3600/3600#11*3600/3600   # time of the day [h UTC]
testinput.cc         = 0.6       # cloud cover fraction [-]
testinput.dFz        = 0.0002        # cloud top radiative divergence [W m-2] 
testinput.sw_ls      = True    # land surface switch
testinput.ls_type    = 'ags'     # land-surface parameterization ('js' for Jarvis-Stewart or 'ags' for A-Gs)
testinput.wg         = 0.19      # volumetric water content top soil layer [m3 m-3]
testinput.w2         = 0.21      # volumetric water content deeper soil layer [m3 m-3]
testinput.cveg       = 0.95      # vegetation fraction [-]
testinput.Tsoil      = 294.      # temperature top soil layer [K]
testinput.T2         = 285.      # temperature deeper soil layer [K]
testinput.a          = 0.219     # Clapp and Hornberger retention curve parameter a
testinput.b          = 4.90      # Clapp and Hornberger retention curve parameter b
testinput.p          = 4.        # Clapp and Hornberger retention curve parameter c
testinput.CGsat      = 3.56e-6   # saturated soil conductivity for heat
testinput.wsat       = 0.472     # saturated volumetric water content ECMWF config [-]
testinput.wfc        = 0.323     # volumetric water content field capacity [-]
testinput.wwilt      = 0.171     # volumetric water content wilting point [-]
testinput.C1sat      = 0.132     
testinput.C2ref      = 1.8
testinput.LAI        = 2.        # leaf area index [-]
testinput.gD         = 0.0       # correction factor transpiration for VPD [-]
testinput.rsmin      = 110.      # minimum resistance transpiration [s m-1]
testinput.rssoilmin  = 50.       # minimun resistance soil evaporation [s m-1]
testinput.alpha      = 0.25      # surface albedo [-]
testinput.Ts         = 290.      # initial surface temperature [K]
testinput.Wmax       = 0.0002    # thickness of water layer on wet vegetation [m]
testinput.Wl         = 0.0000    # equivalent water layer depth for wet vegetation [m]
testinput.Lambda     = 5.9       # thermal diffusivity skin layer [-]
testinput.c3c4       = 'c3'      # Plant type ('c3' or 'c4')
testinput.sw_cu      = True     # Cumulus parameterization switch
testinput.dz_h       = 150.      # Transition layer thickness [m]
testinput.Cs         = 1e12      # drag coefficient for scalars [-]
testinput.PARfract = 0.5 #fraction of shortwave radiation at the surface that is PAR (-)
testinput.R10 = 0.23
testinput.E0 = 53.3e3    #activation energy [53.3 kJ kmol-1]
testinput.sw_dynamicsl_border = False
testinput.sw_model_stable_con = True
testinput.sw_use_ribtol = True
testinput.sw_advfp = False
testinput.sw_printwarnings = True

#tsteps = int(np.floor(testinput.runtime / testinput.dt)) #the number of timesteps, used below
#testinput.wtheta_input = np.zeros(tsteps)
#testinput.wq_input = np.zeros(tsteps)
#testinput.wCO2_input = np.zeros(tsteps)
#for t in range(tsteps):
#    if (t*testinput.dt >= 1.5*3600) and (t*testinput.dt <= 9*3600):
#        testinput.wtheta_input[t] = 0.08 * np.sin(np.pi*(t*testinput.dt-5400)/27000)
#    else:
#        testinput.wtheta_input[t] = 0
#    testinput.wq_input[t] = 0.087 * np.sin(np.pi * t*testinput.dt/43200) /1000 #/1000 for conversion to kg/kg m s-1
#    if (t*testinput.dt >= 2*3600) and (t*testinput.dt <= 9.5*3600):
#        testinput.wCO2_input[t] = -0.1*np.sin(np.pi*(t*testinput.dt-7200)/27000)
#    else:
#        testinput.wCO2_input[t] = 0.
##testinput.wCO2       = testinput.wCO2_input[0]        # surface kinematic CO2 flux [ppm m s-1]
#testinput.wq         = testinput.wq_input[0]     # surface kinematic moisture flux [kg kg-1 m s-1]
#testinput.wtheta     = testinput.wtheta_input[0]  +0.001     # surface kinematic heat flux [K m s-1]

testinput.soilCOSmodeltype   = None #can be set to None or 'Sun_Ogee'
testinput.uptakemodel = 'Ogee'
testinput.sw_soilmoisture    = 'simple'
testinput.sw_soiltemp    = 'simple'
testinput.kH_type         = 'Sun'
testinput.Diffus_type     = 'Sun'
testinput.b_sCOSm = 5.3
testinput.nr_nodes     = 26
testinput.s_moist_opt  = 0.20
testinput.fCA          = 1.
testinput.Vspmax        = 1.e-10
testinput.Q10             = 3.
testinput.layer1_2division = 0.3
testinput.write_soilCOS_to_f = False
testinput.nr_nodes_for_filewr = 5


testmodel = fwdm.model(testinput)
testmodel.run(checkpoint=False,updatevals_surf_lay=True,delete_at_end=False,save_vars_indict=False)
#run testmodel to initialise properly
adjoint_modelling = im.inverse_modelling(testmodel)
adjoint_modelling.all_tests_pass = True

if test_from_ref_paper:
    print('adjoint test example from reference paper:')
    testx = ['dTs']
    testHTy = ['adTs']
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dLwout',y_variable='adLwout',HTy_variables=testHTy,printmode=printmodeadj)

#testing of surface layer
if adjointtest_surf_lay:
    print('adjoint tests of surface layer:')
    testx = ['du','dv','dwstar','dtheta','dwtheta','dh','dwCOS','dCOS','dCs_start','dwCO2','dCO2','drs','dustar_start','dwthetav','dthetav','dq','dwq','dCOSmeasuring_height','dz0m','dz0h']
    testHTy = ['adu','adv','adwstar','adtheta','adwtheta','adh','adwCOS','adCOS','adCs_start','adwCO2','adCO2','adrs','adustar_start','adwthetav','adthetav','adq','adwq','adCOSmeasuring_height','adz0m','adz0h']
#    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=['dh'],Hx_variable='dCs_dzsl',y_variable='adCs_dzsl',HTy_variables=['adh'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dueff',y_variable='adueff',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSsurf_dwCOS',y_variable='adCOSsurf_dwCOS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSsurf_dCOS',y_variable='adCOSsurf_dCOS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSsurf_dCs_start',y_variable='adCOSsurf_dCs_start',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSsurf',y_variable='adCOSsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2surf',y_variable='adCO2surf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetasurf_dtheta',y_variable='adthetasurf_dtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetasurf_dwtheta',y_variable='adthetasurf_dwtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetasurf_dCs_start',y_variable='adthetasurf_dCs_start',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetasurf',y_variable='adthetasurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dTsurf',y_variable='adTsurf',HTy_variables=testHTy,printmode=printmodeadj)
    #from old qsurf implementation:
    #adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqsatsurf_rsl',y_variable='adqsatsurf_rsl',HTy_variables=testHTy,printmode=printmodeadj)
    #adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dcq_dCs_start',y_variable='adcq_dCs_start',HTy_variables=testHTy,printmode=printmodeadj)
    #adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dcq_dueff',y_variable='adcq_dueff',HTy_variables=testHTy,printmode=printmodeadj)
    #adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dcq_drs',y_variable='adcq_drs',HTy_variables=testHTy,printmode=printmodeadj)
    #adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dcq',y_variable='adcq',HTy_variables=testHTy,printmode=printmodeadj)
    #adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqsurf_dq',y_variable='adqsurf_dq',HTy_variables=testHTy,printmode=printmodeadj)
    #adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqsurf_dcq',y_variable='adqsurf_dcq',HTy_variables=testHTy,printmode=printmodeadj)
    #adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqsurf_dqsatsurf_rsl',y_variable='adqsurf_dqsatsurf_rsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqsurf_dq',y_variable='adqsurf_dq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqsurf_dwq',y_variable='adqsurf_dwq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqsurf_dCs_start',y_variable='adqsurf_dCs_start',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqsurf_dueff',y_variable='adqsurf_dueff',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqsurf',y_variable='adqsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='desurf',y_variable='adesurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetavsurf',y_variable='adthetavsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzsl',y_variable='adzsl',HTy_variables=testHTy,printmode=printmodeadj)
    if testinput.sw_use_ribtol:
        adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dRib_dthetav',y_variable='adRib_dthetav',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dRib_dzsl',y_variable='adRib_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dRib_dthetavsurf',y_variable='adRib_dthetavsurf',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dRib_dueff',y_variable='adRib_dueff',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dRib',y_variable='adRib',HTy_variables=testHTy,printmode=printmodeadj)
    else:
        adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dL_dthetav',y_variable='adL_dthetav',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dL_dustar_start',y_variable='adL_dustar_start',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dL_dwthetav',y_variable='adL_dwthetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dL',y_variable='adL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsim_term_for_dCm_dzsl',y_variable='adpsim_term_for_dCm_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_z0m',y_variable='adzeta_dL_z0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_zsl',y_variable='adzeta_dL_zsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_z0h',y_variable='adzeta_dL_z0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_2',y_variable='adzeta_dL_2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_Tmh',y_variable='adzeta_dL_Tmh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_Tmh2',y_variable='adzeta_dL_Tmh2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_Tmh3',y_variable='adzeta_dL_Tmh3',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_Tmh4',y_variable='adzeta_dL_Tmh4',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_Tmh5',y_variable='adzeta_dL_Tmh5',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_Tmh6',y_variable='adzeta_dL_Tmh6',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_Tmh7',y_variable='adzeta_dL_Tmh7',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_qmh',y_variable='adzeta_dL_qmh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_qmh2',y_variable='adzeta_dL_qmh2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_qmh3',y_variable='adzeta_dL_qmh3',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_qmh4',y_variable='adzeta_dL_qmh4',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_qmh5',y_variable='adzeta_dL_qmh5',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_qmh6',y_variable='adzeta_dL_qmh6',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_qmh7',y_variable='adzeta_dL_qmh7',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_COSmh',y_variable='adzeta_dL_COSmh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_COSmh2',y_variable='adzeta_dL_COSmh2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_COSmh3',y_variable='adzeta_dL_COSmh3',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_COSmh4',y_variable='adzeta_dL_COSmh4',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_CO2mh',y_variable='adzeta_dL_CO2mh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_CO2mh2',y_variable='adzeta_dL_CO2mh2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_CO2mh3',y_variable='adzeta_dL_CO2mh3',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dL_CO2mh4',y_variable='adzeta_dL_CO2mh4',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_Cm_zsl',y_variable='adpsimterm_for_Cm_zsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_Cm_z0m',y_variable='adpsimterm_for_Cm_z0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_dCm_dz0m',y_variable='adpsimterm_for_dCm_dz0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCm_dzsl',y_variable='adCm_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCm_dz0m',y_variable='adCm_dz0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCm_dL',y_variable='adCm_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCm',y_variable='adCm',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsim_term_for_dCs_dzsl',y_variable='adpsim_term_for_dCs_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_term_for_dCs_dzsl',y_variable='adpsih_term_for_dCs_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCs_dzsl',y_variable='adCs_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCs_dz0m',y_variable='adCs_dz0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_dCs_dL',y_variable='adpsimterm_for_dCs_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsihterm_for_dCs_dL',y_variable='adpsihterm_for_dCs_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCs_dL',y_variable='adCs_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsihterm_for_dCs_dz0h',y_variable='adpsihterm_for_dCs_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCs_dz0h',y_variable='adCs_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCs',y_variable='adCs',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dustar',y_variable='adustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCs_start',y_variable='adCs_start',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dustar_start',y_variable='adustar_start',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='duw',y_variable='aduw',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dvw',y_variable='advw',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dT2m_dthetasurf',y_variable='adT2m_dthetasurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dT2m_dwtheta',y_variable='adT2m_dwtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dT2m_dustar',y_variable='adT2m_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dT2m_dz0h',y_variable='adT2m_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_2_L',y_variable='adpsih_2_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_z0h_L',y_variable='adpsih_z0h_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dT2m_dL',y_variable='adT2m_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dT2m',y_variable='adT2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh_dthetasurf',y_variable='adthetamh_dthetasurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh_dwtheta',y_variable='adthetamh_dwtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh_dustar',y_variable='adthetamh_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh_dz0h',y_variable='adthetamh_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_Tmh_L',y_variable='adpsih_Tmh_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh_dL',y_variable='adthetamh_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh',y_variable='adthetamh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dTmh',y_variable='adTmh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh2_dthetasurf',y_variable='adthetamh2_dthetasurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh2_dwtheta',y_variable='adthetamh2_dwtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh2_dustar',y_variable='adthetamh2_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh2_dz0h',y_variable='adthetamh2_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_Tmh2_L',y_variable='adpsih_Tmh2_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh2_dL',y_variable='adthetamh2_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh2',y_variable='adthetamh2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dTmh2',y_variable='adTmh2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh3_dthetasurf',y_variable='adthetamh3_dthetasurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh3_dwtheta',y_variable='adthetamh3_dwtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh3_dustar',y_variable='adthetamh3_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh3_dz0h',y_variable='adthetamh3_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_Tmh3_L',y_variable='adpsih_Tmh3_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh3_dL',y_variable='adthetamh3_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh3',y_variable='adthetamh3',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dTmh3',y_variable='adTmh3',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh4_dthetasurf',y_variable='adthetamh4_dthetasurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh4_dwtheta',y_variable='adthetamh4_dwtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh4_dustar',y_variable='adthetamh4_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh4_dz0h',y_variable='adthetamh4_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_Tmh4_L',y_variable='adpsih_Tmh4_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh4_dL',y_variable='adthetamh4_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh4',y_variable='adthetamh4',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dTmh4',y_variable='adTmh4',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh5_dthetasurf',y_variable='adthetamh5_dthetasurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh5_dwtheta',y_variable='adthetamh5_dwtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh5_dustar',y_variable='adthetamh5_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh5_dz0h',y_variable='adthetamh5_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_Tmh5_L',y_variable='adpsih_Tmh5_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh5_dL',y_variable='adthetamh5_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh5',y_variable='adthetamh5',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dTmh5',y_variable='adTmh5',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh6_dthetasurf',y_variable='adthetamh6_dthetasurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh6_dwtheta',y_variable='adthetamh6_dwtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh6_dustar',y_variable='adthetamh6_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh6_dz0h',y_variable='adthetamh6_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_Tmh6_L',y_variable='adpsih_Tmh6_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh6_dL',y_variable='adthetamh6_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh6',y_variable='adthetamh6',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dTmh6',y_variable='adTmh6',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh7_dthetasurf',y_variable='adthetamh7_dthetasurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh7_dwtheta',y_variable='adthetamh7_dwtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh7_dustar',y_variable='adthetamh7_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh7_dz0h',y_variable='adthetamh7_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_Tmh7_L',y_variable='adpsih_Tmh7_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh7_dL',y_variable='adthetamh7_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dthetamh7',y_variable='adthetamh7',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dTmh7',y_variable='adTmh7',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dq2m_dqsurf',y_variable='adq2m_dqsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dq2m_dwq',y_variable='adq2m_dwq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dq2m_dustar',y_variable='adq2m_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dq2m_dz0h',y_variable='adq2m_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dq2m_dL',y_variable='adq2m_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dq2m',y_variable='adq2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh_dqsurf',y_variable='adqmh_dqsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh_dwq',y_variable='adqmh_dwq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh_dustar',y_variable='adqmh_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh_dz0h',y_variable='adqmh_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_qmh_L',y_variable='adpsih_qmh_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh_dL',y_variable='adqmh_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh',y_variable='adqmh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh2_dqsurf',y_variable='adqmh2_dqsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh2_dwq',y_variable='adqmh2_dwq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh2_dustar',y_variable='adqmh2_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh2_dz0h',y_variable='adqmh2_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_qmh2_L',y_variable='adpsih_qmh2_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh2_dL',y_variable='adqmh2_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh2',y_variable='adqmh2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh3_dqsurf',y_variable='adqmh3_dqsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh3_dwq',y_variable='adqmh3_dwq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh3_dustar',y_variable='adqmh3_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh3_dz0h',y_variable='adqmh3_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_qmh3_L',y_variable='adpsih_qmh3_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh3_dL',y_variable='adqmh3_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh3',y_variable='adqmh3',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh4_dqsurf',y_variable='adqmh4_dqsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh4_dwq',y_variable='adqmh4_dwq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh4_dustar',y_variable='adqmh4_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh4_dz0h',y_variable='adqmh4_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_qmh4_L',y_variable='adpsih_qmh4_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh4_dL',y_variable='adqmh4_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh4',y_variable='adqmh4',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh5_dqsurf',y_variable='adqmh5_dqsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh5_dwq',y_variable='adqmh5_dwq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh5_dustar',y_variable='adqmh5_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh5_dz0h',y_variable='adqmh5_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_qmh5_L',y_variable='adpsih_qmh5_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh5_dL',y_variable='adqmh5_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh5',y_variable='adqmh5',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh6_dqsurf',y_variable='adqmh6_dqsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh6_dwq',y_variable='adqmh6_dwq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh6_dustar',y_variable='adqmh6_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh6_dz0h',y_variable='adqmh6_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_qmh6_L',y_variable='adpsih_qmh6_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh6_dL',y_variable='adqmh6_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh6',y_variable='adqmh6',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh7_dqsurf',y_variable='adqmh7_dqsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh7_dwq',y_variable='adqmh7_dwq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh7_dustar',y_variable='adqmh7_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh7_dz0h',y_variable='adqmh7_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_qmh7_L',y_variable='adpsih_qmh7_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh7_dL',y_variable='adqmh7_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dqmh7',y_variable='adqmh7',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOS2m_dCOSsurf',y_variable='adCOS2m_dCOSsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOS2m_dwCOS',y_variable='adCOS2m_dwCOS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOS2m_dustar',y_variable='adCOS2m_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOS2m_dz0h',y_variable='adCOS2m_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOS2m_dL',y_variable='adCOS2m_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOS2m',y_variable='adCOS2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh_dCOSsurf',y_variable='adCOSmh_dCOSsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh_dwCOS',y_variable='adCOSmh_dwCOS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh_dustar',y_variable='adCOSmh_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dzeta_dCOSmh',y_variable='adzeta_dCOSmh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_COSmh_L_num',y_variable='adpsih_COSmh_L_num',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh_dCOSmeasuring_height',y_variable='adCOSmh_dCOSmeasuring_height',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh_dz0h',y_variable='adCOSmh_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_COSmh_L',y_variable='adpsih_COSmh_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh_dL',y_variable='adCOSmh_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh',y_variable='adCOSmh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh2_dCOSsurf',y_variable='adCOSmh2_dCOSsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh2_dwCOS',y_variable='adCOSmh2_dwCOS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh2_dustar',y_variable='adCOSmh2_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh2_dz0h',y_variable='adCOSmh2_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_COSmh2_L',y_variable='adpsih_COSmh2_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh2_dL',y_variable='adCOSmh2_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh2',y_variable='adCOSmh2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh3_dCOSsurf',y_variable='adCOSmh3_dCOSsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh3_dwCOS',y_variable='adCOSmh3_dwCOS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh3_dustar',y_variable='adCOSmh3_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh3_dz0h',y_variable='adCOSmh3_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_COSmh3_L',y_variable='adpsih_COSmh3_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh3_dL',y_variable='adCOSmh3_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh3',y_variable='adCOSmh3',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh4_dCOSsurf',y_variable='adCOSmh4_dCOSsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh4_dwCOS',y_variable='adCOSmh4_dwCOS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh4_dustar',y_variable='adCOSmh4_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh4_dz0h',y_variable='adCOSmh4_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_COSmh4_L',y_variable='adpsih_COSmh4_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh4_dL',y_variable='adCOSmh4_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCOSmh4',y_variable='adCOSmh4',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO22m_dCO2surf',y_variable='adCO22m_dCO2surf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO22m_dwCO2',y_variable='adCO22m_dwCO2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO22m_dustar',y_variable='adCO22m_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO22m_dz0h',y_variable='adCO22m_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO22m_dL',y_variable='adCO22m_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO22m',y_variable='adCO22m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh_dCO2surf',y_variable='adCO2mh_dCO2surf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh_dwCO2',y_variable='adCO2mh_dwCO2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh_dustar',y_variable='adCO2mh_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh_dz0h',y_variable='adCO2mh_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_CO2mh_L',y_variable='adpsih_CO2mh_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh_dL',y_variable='adCO2mh_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh',y_variable='adCO2mh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh2_dCO2surf',y_variable='adCO2mh2_dCO2surf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh2_dwCO2',y_variable='adCO2mh2_dwCO2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh2_dustar',y_variable='adCO2mh2_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh2_dz0h',y_variable='adCO2mh2_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_CO2mh2_L',y_variable='adpsih_CO2mh2_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh2_dL',y_variable='adCO2mh2_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh2',y_variable='adCO2mh2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh3_dCO2surf',y_variable='adCO2mh3_dCO2surf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh3_dwCO2',y_variable='adCO2mh3_dwCO2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh3_dustar',y_variable='adCO2mh3_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh3_dz0h',y_variable='adCO2mh3_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_CO2mh3_L',y_variable='adpsih_CO2mh3_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh3_dL',y_variable='adCO2mh3_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh3',y_variable='adCO2mh3',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh4_dCO2surf',y_variable='adCO2mh4_dCO2surf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh4_dwCO2',y_variable='adCO2mh4_dwCO2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh4_dustar',y_variable='adCO2mh4_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh4_dz0h',y_variable='adCO2mh4_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsih_CO2mh4_L',y_variable='adpsih_CO2mh4_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh4_dL',y_variable='adCO2mh4_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dCO2mh4',y_variable='adCO2mh4',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='du2m_duw',y_variable='adu2m_duw',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='du2m_dustar',y_variable='adu2m_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='du2m_dz0m',y_variable='adu2m_dz0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsim_2_L',y_variable='adpsim_2_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dpsim_z0m_L',y_variable='adpsim_z0m_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='du2m_dL',y_variable='adu2m_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='du2m',y_variable='adu2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dv2m_dvw',y_variable='adv2m_dvw',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dv2m_dustar',y_variable='adv2m_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dv2m_dz0m',y_variable='adv2m_dz0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dv2m_dL',y_variable='adv2m_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='dv2m',y_variable='adv2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='desat2m',y_variable='adesat2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=testx,Hx_variable='de2m',y_variable='ade2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_surf_lay(testmodel,x_variables=['dthetav'],Hx_variable='dpsim_2_L',y_variable='adpsim_2_L',HTy_variables=['adthetav'])
if gradtest_surf_lay:
    print('gradient tests of run surface layer:')
    testlist_rsl = ['u','v','wstar','theta','wtheta','h','wCOS','COS','Cs','wCO2','CO2','rs','ustar','wthetav','thetav','q','wq','COSmeasuring_height','z0m','z0h']
    testdstate_rsl = {'du':1.0,'dv':1.0,'dwstar':1.0,'dtheta':1.0,'dwtheta':1.0,'dh':1.0,'dwCOS':1.0,'dCOS':1.0,'dCs_start':1.0,'dwCO2':1.0,'dCO2':1.0,'drs':1.0,'dustar_start':1.0,'dwthetav':1.0,'dthetav':1.0,'dq':1.0,'dwq':1.0,
                      'dCOSmeasuring_height':1.0,'dz0m':1.0,'dz0h':1.0}
    #only choose outputvars that are changed within the surface layer part, e.g. 'dthetav_dtheta' cannot be tested.
    adjoint_modelling.grad_test_run_surface_layer(testmodel,['u'],'ueff',{'du':1.0},'dueff',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,['v'],'ueff',{'dv':1.0},'dueff',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,['wstar'],'ueff',{'dwstar':1.0},'dueff',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,['wCOS'],'COSsurf',{'dwCOS':1.0},'dCOSsurf_dwCOS',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,['wCOS','COS','Cs','wstar'],'COSsurf',{'dwCOS':1.0,'dCOS':1.0,'dCs_start':1.0,'dwstar':1.0},'dCOSsurf',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,['wCOS','COS','Cs','wstar'],'CO2surf',{'dwCOS':1.0,'dCOS':1.0,'dCs_start':1.0,'dwstar':1.0},'dCO2surf',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,['theta'],'thetasurf',{'dtheta':1.0},'dthetasurf_dtheta',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,['wtheta'],'thetasurf',{'dwtheta':1.0},'dthetasurf_dwtheta',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,['Cs'],'thetasurf',{'dCs_start':1.0},'dthetasurf_dCs_start',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,['theta','wtheta','Cs','wstar'],'thetasurf',{'dtheta':1.0,'dwtheta':1.0,'dCs_start':1.0,'dwstar':1.0},'dthetasurf',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'Tsurf',testdstate_rsl,'dTsurf')
    #from old qsurf implementation:
    #adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'qsatsurf_rsl',testdstate_rsl,'dqsatsurf_rsl')
    #adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'cq',testdstate_rsl,'dcq')
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'qsurf',testdstate_rsl,'dqsurf',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'esurf',testdstate_rsl,'desurf',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'thetavsurf',testdstate_rsl,'dthetavsurf',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'zsl',testdstate_rsl,'dzsl',printmode)
    if testinput.sw_use_ribtol:
        adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'Rib',testdstate_rsl,'dRib',printmode) 
        adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'L',testdstate_rsl,'dL',printmode) 
    else:
        adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'L',testdstate_rsl,'dL',printmode) #the tree tests below are actually unnecessary if this one passes
        adjoint_modelling.grad_test_run_surface_layer(testmodel,['thetav'],'L',{'dthetav':1.0},'dL_dthetav',printmode)
        adjoint_modelling.grad_test_run_surface_layer(testmodel,['ustar'],'L',{'dustar_start':1.0},'dL_dustar_start',printmode)
        adjoint_modelling.grad_test_run_surface_layer(testmodel,['wthetav'],'L',{'dwthetav':1.0},'dL_dwthetav',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'Cs',testdstate_rsl,'dCs',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'Cm',testdstate_rsl,'dCm',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'ustar',testdstate_rsl,'dustar',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'uw',testdstate_rsl,'duw',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'vw',testdstate_rsl,'dvw',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'T2m',testdstate_rsl,'dT2m',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'thetamh',testdstate_rsl,'dthetamh',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'thetamh2',testdstate_rsl,'dthetamh2',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'thetamh3',testdstate_rsl,'dthetamh3',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'thetamh4',testdstate_rsl,'dthetamh4',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'thetamh5',testdstate_rsl,'dthetamh5',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'thetamh6',testdstate_rsl,'dthetamh6',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'thetamh7',testdstate_rsl,'dthetamh7',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'Tmh',testdstate_rsl,'dTmh',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'Tmh2',testdstate_rsl,'dTmh2',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'Tmh3',testdstate_rsl,'dTmh3',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'Tmh4',testdstate_rsl,'dTmh4',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'Tmh5',testdstate_rsl,'dTmh5',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'Tmh6',testdstate_rsl,'dTmh6',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'Tmh7',testdstate_rsl,'dTmh7',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'q2m',testdstate_rsl,'dq2m',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'qmh',testdstate_rsl,'dqmh',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'qmh2',testdstate_rsl,'dqmh2',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'qmh3',testdstate_rsl,'dqmh3',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'qmh4',testdstate_rsl,'dqmh4',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'qmh5',testdstate_rsl,'dqmh5',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'qmh6',testdstate_rsl,'dqmh6',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'qmh7',testdstate_rsl,'dqmh7',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'COS2m',testdstate_rsl,'dCOS2m',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'COSmh',testdstate_rsl,'dCOSmh',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'COSmh2',testdstate_rsl,'dCOSmh2',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'COSmh3',testdstate_rsl,'dCOSmh3',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'COSmh4',testdstate_rsl,'dCOSmh4',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'CO22m',testdstate_rsl,'dCO22m',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'CO2mh',testdstate_rsl,'dCO2mh',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'CO2mh2',testdstate_rsl,'dCO2mh2',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'CO2mh3',testdstate_rsl,'dCO2mh3',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'CO2mh4',testdstate_rsl,'dCO2mh4',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'u2m',testdstate_rsl,'du2m',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'v2m',testdstate_rsl,'dv2m',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'esat2m',testdstate_rsl,'desat2m',printmode)
    adjoint_modelling.grad_test_run_surface_layer(testmodel,testlist_rsl,'e2m',testdstate_rsl,'de2m',printmode)

if adjointtest_ribtol:
    print('adjoint tests of ribtol:')
    testx = ['dRib','dzsl','dz0m','dz0h']
    testHTy = (['a'+item for item in testx])
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dL0',y_variable='adL0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfx_dRib',y_variable='adfx_dRib',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dzeta_dL_zsl',y_variable='adzeta_dL_zsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dzeta_dL_z0h',y_variable='adzeta_dL_z0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dzeta_dL_z0m',y_variable='adzeta_dL_z0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm_for_dfx_dzsl',y_variable='adpsihterm_for_dfx_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_dfx_dzsl',y_variable='adpsimterm_for_dfx_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm1_for_dfx_dL',y_variable='adpsihterm1_for_dfx_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm2_for_dfx_dL',y_variable='adpsihterm2_for_dfx_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm1_for_dfx_dL',y_variable='adpsimterm1_for_dfx_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm2_for_dfx_dL',y_variable='adpsimterm2_for_dfx_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_dfx_dz0m',y_variable='adpsimterm_for_dfx_dz0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm_for_dfx_dz0h',y_variable='adpsihterm_for_dfx_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfx_dzsl',y_variable='adfx_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfx_dL',y_variable='adfx_dL',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfx_dz0m',y_variable='adfx_dz0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfx_dz0h',y_variable='adfx_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfx',y_variable='adfx',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dLstart',y_variable='adLstart',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dLend',y_variable='adLend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dzeta_dLstart_zsl',y_variable='adzeta_dLstart_zsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dzeta_dLstart_z0h',y_variable='adzeta_dLstart_z0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dzeta_dLstart_z0m',y_variable='adzeta_dLstart_z0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm_for_dfxdif_part1_dzsl',y_variable='adpsihterm_for_dfxdif_part1_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_dfxdif_part1_dzsl',y_variable='adpsimterm_for_dfxdif_part1_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm1_for_dfxdif_part1_dLstart',y_variable='adpsihterm1_for_dfxdif_part1_dLstart',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm2_for_dfxdif_part1_dLstart',y_variable='adpsihterm2_for_dfxdif_part1_dLstart',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm1_for_dfxdif_part1_dLstart',y_variable='adpsimterm1_for_dfxdif_part1_dLstart',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm2_for_dfxdif_part1_dLstart',y_variable='adpsimterm2_for_dfxdif_part1_dLstart',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm_for_dfxdif_part1_dz0h',y_variable='adpsihterm_for_dfxdif_part1_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_dfxdif_part1_dz0m',y_variable='adpsimterm_for_dfxdif_part1_dz0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfxdif_part1_dzsl',y_variable='adfxdif_part1_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfxdif_part1_dLstart',y_variable='adfxdif_part1_dLstart',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfxdif_part1_dz0h',y_variable='adfxdif_part1_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfxdif_part1_dz0m',y_variable='adfxdif_part1_dz0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfxdif_part1',y_variable='adfxdif_part1',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dzeta_dLend_zsl',y_variable='adzeta_dLend_zsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dzeta_dLend_z0h',y_variable='adzeta_dLend_z0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dzeta_dLend_z0m',y_variable='adzeta_dLend_z0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm_for_dfxdif_part2_dzsl',y_variable='adpsihterm_for_dfxdif_part2_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_dfxdif_part2_dzsl',y_variable='adpsimterm_for_dfxdif_part2_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm1_for_dfxdif_part2_dLend',y_variable='adpsihterm1_for_dfxdif_part2_dLend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm2_for_dfxdif_part2_dLend',y_variable='adpsihterm2_for_dfxdif_part2_dLend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm1_for_dfxdif_part2_dLend',y_variable='adpsimterm1_for_dfxdif_part2_dLend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm2_for_dfxdif_part2_dLend',y_variable='adpsimterm2_for_dfxdif_part2_dLend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsihterm_for_dfxdif_part2_dz0h',y_variable='adpsihterm_for_dfxdif_part2_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_dfxdif_part2_dz0m',y_variable='adpsimterm_for_dfxdif_part2_dz0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfxdif_part2_dzsl',y_variable='adfxdif_part2_dzsl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfxdif_part2_dLend',y_variable='adfxdif_part2_dLend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfxdif_part2_dz0h',y_variable='adfxdif_part2_dz0h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfxdif_part2_dz0m',y_variable='adfxdif_part2_dz0m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfxdif_part2',y_variable='adfxdif_part2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dfxdif',y_variable='adfxdif',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dL_new',y_variable='adL_new',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ribtol(testmodel,x_variables=testx,Hx_variable='dL',y_variable='adL',HTy_variables=testHTy,printmode=printmodeadj)

if gradtest_ribtol:
    print('gradient tests of ribtol:')
    testlist_rtl = ['Rib','zsl','z0m','z0h']
    testdstate_rtl = {}
    for item in testlist_rtl:
        testdstate_rtl['d'+item] = 1.0
    adjoint_modelling.grad_test_ribtol(testmodel,testlist_rtl,'L0',testdstate_rtl,'dL0',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,['Rib'],'fx',{'dRib':1.0},'dfx',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,['zsl'],'fx',{'dzsl':1.0},'dfx',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,['z0m'],'fx',{'dz0m':1.0},'dfx',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,testlist_rtl,'fx',testdstate_rtl,'dfx',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,testlist_rtl,'Lstart',testdstate_rtl,'dLstart',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,testlist_rtl,'Lend',testdstate_rtl,'dLend',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,['zsl'],'fxdif_part1',{'dzsl':1.0},'dfxdif_part1',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,testlist_rtl,'fxdif_part1',testdstate_rtl,'dfxdif_part1',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,testlist_rtl,'fxdif_part2',testdstate_rtl,'dfxdif_part2',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,testlist_rtl,'fxdif',testdstate_rtl,'dfxdif',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,testlist_rtl,'L',testdstate_rtl,'dL_new',printmode)
    adjoint_modelling.grad_test_ribtol(testmodel,testlist_rtl,'L',testdstate_rtl,'dL',printmode)

if adjointtest_ags:
    print('adjoint tests of ags:')
    if not testinput.ls_type == 'ags':
        raise Exception('Set ls_type to \'ags\' for adjoint tests of ags')
    testx = ['dthetasurf','dTs','de','dCO2','dCO2surf','dPARfract','dSwin','dcveg','dw2','dwfc','dwwilt','dsca_sto','dLAI','dTsoil','dra','dwg','dCOS','dCOSsurf','dgciCOS','dE0','dR10']
    testHTy = ['adthetasurf','adTs','ade','adCO2','adCO2surf','adPARfract','adSwin','adcveg','adw2','adwfc','adwwilt','adsca_sto','adLAI','adTsoil','adra','adwg','adCOS','adCOSsurf','adgciCOS','adE0','adR10']
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dCO2comp_dthetasurf',y_variable='adCO2comp_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dgm1_dthetasurf',y_variable='adgm1_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dgm2_dthetasurf',y_variable='adgm2_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dgm3_dthetasurf',y_variable='adgm3_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dgm_dthetasurf',y_variable='adgm_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dfmin0_dthetasurf',y_variable='adfmin0_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dsqrtf_dthetasurf',y_variable='adsqrtf_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dsqterm_dthetasurf',y_variable='adsqterm_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dfmin_dthetasurf',y_variable='adfmin_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dD0_dthetasurf',y_variable='adD0_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dDs_dTs',y_variable='adDs_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dDs_de',y_variable='adDs_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dcfrac_dTs',y_variable='adcfrac_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dcfrac_de',y_variable='adcfrac_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dco2abs',y_variable='adco2abs',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dci_dthetasurf',y_variable='adci_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dci_dTs',y_variable='adci_dTs',HTy_variables=['adTs'],printmode=printmodeadj) 
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dci_de',y_variable='adci_de',HTy_variables=['ade'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dci_dCO2',y_variable='adci_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dAmmax1_dthetasurf',y_variable='adAmmax1_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dAmmax2_dthetasurf',y_variable='adAmmax2_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dAmmax3_dthetasurf',y_variable='adAmmax3_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dAmmax_dthetasurf',y_variable='adAmmax_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dw2'],Hx_variable='dbetaw_dw2',y_variable='adbetaw_dw2',HTy_variables=['adw2'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwfc'],Hx_variable='dbetaw_dwfc',y_variable='adbetaw_dwfc',HTy_variables=['adwfc'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwwilt'],Hx_variable='dbetaw_dwwilt',y_variable='adbetaw_dwwilt',HTy_variables=['adwwilt'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dw2'],Hx_variable='dfstr_dw2',y_variable='adfstr_dw2',HTy_variables=['adw2'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwfc'],Hx_variable='dfstr_dwfc',y_variable='adfstr_dwfc',HTy_variables=['adwfc'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwwilt'],Hx_variable='dfstr_dwwilt',y_variable='adfstr_dwwilt',HTy_variables=['adwwilt'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='daexp_dthetasurf',y_variable='adaexp_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='daexp_dTs',y_variable='adaexp_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='daexp_de',y_variable='adaexp_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='daexp_dCO2',y_variable='adaexp_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dAm_dthetasurf',y_variable='adAm_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dAm_dTs',y_variable='adAm_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dAm_de',y_variable='adAm_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dAm_dCO2',y_variable='adAm_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dRdark_dthetasurf',y_variable='adRdark_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dRdark_dTs',y_variable='adRdark_dTs',HTy_variables=['adTs'],printmode=printmodeadj) 
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dRdark_de',y_variable='adRdark_de',HTy_variables=['ade'],printmode=printmodeadj) 
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dRdark_dCO2',y_variable='adRdark_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dAmRdark_dthetasurf',y_variable='adAmRdark_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj) 
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dAmRdark_dTs',y_variable='adAmRdark_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dAmRdark_de',y_variable='adAmRdark_de',HTy_variables=['ade'],printmode=printmodeadj) 
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dAmRdark_dCO2',y_variable='adAmRdark_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='dSwina_dSwin',y_variable='adSwina_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='dSwina_dcveg',y_variable='adSwina_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj) 
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dPARfract'],Hx_variable='dPAR_dPARfract',y_variable='adPAR_dPARfract',HTy_variables=['adPARfract'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='dPAR_dSwin',y_variable='adPAR_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='dPAR_dcveg',y_variable='adPAR_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj) 
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dxdiv_dthetasurf',y_variable='adxdiv_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj) 
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dxdiv_dCO2',y_variable='adxdiv_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj) 
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dalphac_dthetasurf',y_variable='adalphac_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dalphac_dCO2',y_variable='adalphac_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)  
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dpexp_dthetasurf',y_variable='adpexp_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj) 
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dpexp_dTs',y_variable='adpexp_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dpexp_de',y_variable='adpexp_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dpexp_dCO2',y_variable='adpexp_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dPARfract'],Hx_variable='dpexp_dPARfract',y_variable='adpexp_dPARfract',HTy_variables=['adPARfract'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='dpexp_dSwin',y_variable='adpexp_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='dpexp_dcveg',y_variable='adpexp_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=testx,Hx_variable='dAg',y_variable='adAg',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dy_dthetasurf',y_variable='ady_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dy_dTs',y_variable='ady_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dy_de',y_variable='ady_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dy_dCO2',y_variable='ady_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dPARfract'],Hx_variable='dy_dPARfract',y_variable='ady_dPARfract',HTy_variables=['adPARfract'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='dy_dSwin',y_variable='ady_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='dy_dcveg',y_variable='ady_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dy1_dthetasurf',y_variable='ady1_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dy1_dTs',y_variable='ady1_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dy1_de',y_variable='ady1_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dy1_dCO2',y_variable='ady1_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dPARfract'],Hx_variable='dy1_dPARfract',y_variable='ady1_dPARfract',HTy_variables=['adPARfract'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='dy1_dSwin',y_variable='ady1_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='dy1_dcveg',y_variable='ady1_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dLAI'],Hx_variable='dy1_dLAI',y_variable='ady1_dLAI',HTy_variables=['adLAI'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dsy_dthetasurf',y_variable='adsy_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)   
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dsy_dTs',y_variable='adsy_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dsy_de',y_variable='adsy_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dsy_dCO2',y_variable='adsy_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dPARfract'],Hx_variable='dsy_dPARfract',y_variable='adsy_dPARfract',HTy_variables=['adPARfract'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='dsy_dSwin',y_variable='adsy_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='dsy_dcveg',y_variable='adsy_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dLAI'],Hx_variable='dsy_dLAI',y_variable='adsy_dLAI',HTy_variables=['adLAI'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dAn_temporary_dthetasurf',y_variable='adAn_temporary_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dAn_temporary_dTs',y_variable='adAn_temporary_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dAn_temporary_de',y_variable='adAn_temporary_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dAn_temporary_dCO2',y_variable='adAn_temporary_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dPARfract'],Hx_variable='dAn_temporary_dPARfract',y_variable='adAn_temporary_dPARfract',HTy_variables=['adPARfract'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='dAn_temporary_dSwin',y_variable='adAn_temporary_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='dAn_temporary_dcveg',y_variable='adAn_temporary_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dLAI'],Hx_variable='dAn_temporary_dLAI',y_variable='adAn_temporary_dLAI',HTy_variables=['adLAI'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='da11_dthetasurf',y_variable='ada11_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='ddiv1_dTs',y_variable='addiv1_dTs',HTy_variables=['adTs'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='ddiv1_de',y_variable='addiv1_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='ddiv2_dthetasurf',y_variable='addiv2_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='ddiv2_dTs',y_variable='addiv2_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='ddiv2_de',y_variable='addiv2_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='ddiv2_dCO2',y_variable='addiv2_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dpart1_dthetasurf',y_variable='adpart1_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dpart1_dTs',y_variable='adpart1_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dpart1_de',y_variable='adpart1_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dpart1_dCO2',y_variable='adpart1_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dPARfract'],Hx_variable='dpart1_dPARfract',y_variable='adpart1_dPARfract',HTy_variables=['adPARfract'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='dpart1_dSwin',y_variable='adpart1_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='dpart1_dcveg',y_variable='adpart1_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dw2'],Hx_variable='dpart1_dw2',y_variable='adpart1_dw2',HTy_variables=['adw2'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwfc'],Hx_variable='dpart1_dwfc',y_variable='adpart1_dwfc',HTy_variables=['adwfc'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwwilt'],Hx_variable='dpart1_dwwilt',y_variable='adpart1_dwwilt',HTy_variables=['adwwilt'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dLAI'],Hx_variable='dpart1_dLAI',y_variable='adpart1_dLAI',HTy_variables=['adLAI'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dgcco2_dthetasurf',y_variable='adgcco2_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dgcco2_dTs',y_variable='adgcco2_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dgcco2_de',y_variable='adgcco2_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dgcco2_dCO2',y_variable='adgcco2_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dPARfract'],Hx_variable='dgcco2_dPARfract',y_variable='adgcco2_dPARfract',HTy_variables=['adPARfract'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='dgcco2_dSwin',y_variable='adgcco2_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='dgcco2_dcveg',y_variable='adgcco2_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dw2'],Hx_variable='dgcco2_dw2',y_variable='adgcco2_dw2',HTy_variables=['adw2'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwfc'],Hx_variable='dgcco2_dwfc',y_variable='adgcco2_dwfc',HTy_variables=['adwfc'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwwilt'],Hx_variable='dgcco2_dwwilt',y_variable='adgcco2_dwwilt',HTy_variables=['adwwilt'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dsca_sto'],Hx_variable='dgcco2_dsca_sto',y_variable='adgcco2_dsca_sto',HTy_variables=['adsca_sto'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dLAI'],Hx_variable='dgcco2_dLAI',y_variable='adgcco2_dLAI',HTy_variables=['adLAI'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=testx,Hx_variable='dgcco2',y_variable='adgcco2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dgctCOS_dthetasurf',y_variable='adgctCOS_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dgctCOS_dTs',y_variable='adgctCOS_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dgctCOS_de',y_variable='adgctCOS_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dgctCOS_dCO2',y_variable='adgctCOS_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dPARfract'],Hx_variable='dgctCOS_dPARfract',y_variable='adgctCOS_dPARfract',HTy_variables=['adPARfract'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='dgctCOS_dSwin',y_variable='adgctCOS_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='dgctCOS_dcveg',y_variable='adgctCOS_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dw2'],Hx_variable='dgctCOS_dw2',y_variable='adgctCOS_dw2',HTy_variables=['adw2'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwfc'],Hx_variable='dgctCOS_dwfc',y_variable='adgctCOS_dwfc',HTy_variables=['adwfc'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwwilt'],Hx_variable='dgctCOS_dwwilt',y_variable='adgctCOS_dwwilt',HTy_variables=['adwwilt'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dsca_sto'],Hx_variable='dgctCOS_dsca_sto',y_variable='adgctCOS_dsca_sto',HTy_variables=['adsca_sto'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dLAI'],Hx_variable='dgctCOS_dLAI',y_variable='adgctCOS_dLAI',HTy_variables=['adLAI'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dgciCOS'],Hx_variable='dgctCOS_dgciCOS',y_variable='adgctCOS_dgciCOS',HTy_variables=['adgciCOS'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=testx,Hx_variable='dgctCOS',y_variable='adgctCOS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=testx,Hx_variable='drs',y_variable='adrs',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='drsCO2_dthetasurf',y_variable='adrsCO2_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='drsCO2_dTs',y_variable='adrsCO2_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='drsCO2_de',y_variable='adrsCO2_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='drsCO2_dCO2',y_variable='adrsCO2_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dPARfract'],Hx_variable='drsCO2_dPARfract',y_variable='adrsCO2_dPARfract',HTy_variables=['adPARfract'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='drsCO2_dSwin',y_variable='adrsCO2_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='drsCO2_dcveg',y_variable='adrsCO2_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dw2'],Hx_variable='drsCO2_dw2',y_variable='adrsCO2_dw2',HTy_variables=['adw2'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwfc'],Hx_variable='drsCO2_dwfc',y_variable='adrsCO2_dwfc',HTy_variables=['adwfc'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwwilt'],Hx_variable='drsCO2_dwwilt',y_variable='adrsCO2_dwwilt',HTy_variables=['adwwilt'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dsca_sto'],Hx_variable='drsCO2_dsca_sto',y_variable='adrsCO2_dsca_sto',HTy_variables=['adsca_sto'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dLAI'],Hx_variable='drsCO2_dLAI',y_variable='adrsCO2_dLAI',HTy_variables=['adLAI'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dthetasurf'],Hx_variable='dAn_dthetasurf',y_variable='adAn_dthetasurf',HTy_variables=['adthetasurf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTs'],Hx_variable='dAn_dTs',y_variable='adAn_dTs',HTy_variables=['adTs'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['de'],Hx_variable='dAn_de',y_variable='adAn_de',HTy_variables=['ade'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dCO2','dCO2surf'],Hx_variable='dAn_dCO2',y_variable='adAn_dCO2',HTy_variables=['adCO2','adCO2surf'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dra'],Hx_variable='dAn_dra',y_variable='adAn_dra',HTy_variables=['adra'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dPARfract'],Hx_variable='dAn_dPARfract',y_variable='adAn_dPARfract',HTy_variables=['adPARfract'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dSwin'],Hx_variable='dAn_dSwin',y_variable='adAn_dSwin',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dcveg'],Hx_variable='dAn_dcveg',y_variable='adAn_dcveg',HTy_variables=['adcveg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dw2'],Hx_variable='dAn_dw2',y_variable='adAn_dw2',HTy_variables=['adw2'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwfc'],Hx_variable='dAn_dwfc',y_variable='adAn_dwfc',HTy_variables=['adwfc'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwwilt'],Hx_variable='dAn_dwwilt',y_variable='adAn_dwwilt',HTy_variables=['adwwilt'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dsca_sto'],Hx_variable='dAn_dsca_sto',y_variable='adAn_dsca_sto',HTy_variables=['adsca_sto'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dLAI'],Hx_variable='dAn_dLAI',y_variable='adAn_dLAI',HTy_variables=['adLAI'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwg'],Hx_variable='dfw_dwg',y_variable='adfw_dwg',HTy_variables=['adwg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dE0'],Hx_variable='dtexp_dE0',y_variable='adtexp_dE0',HTy_variables=['adE0'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTsoil'],Hx_variable='dtexp_dTsoil',y_variable='adtexp_dTsoil',HTy_variables=['adTsoil'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dE0'],Hx_variable='dResp_dE0',y_variable='adResp_dE0',HTy_variables=['adE0'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dTsoil'],Hx_variable='dResp_dTsoil',y_variable='adResp_dTsoil',HTy_variables=['adTsoil'],printmode=printmodeadj)    
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dwg'],Hx_variable='dResp_dwg',y_variable='adResp_dwg',HTy_variables=['adwg'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dR10'],Hx_variable='dResp_dR10',y_variable='adResp_dR10',HTy_variables=['adR10'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=testx,Hx_variable='dwCO2A',y_variable='adwCO2A',HTy_variables=testHTy,printmode=printmodeadj)   
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=['dE0','dTsoil','dwg','dR10'],Hx_variable='dwCO2R',y_variable='adwCO2R',HTy_variables=['adE0','adTsoil','adwg','adR10'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=testx,Hx_variable='dwCO2',y_variable='adwCO2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=testx,Hx_variable='dwCOSP',y_variable='adwCOSP',HTy_variables=testHTy,printmode=printmodeadj)
    if testinput.soilCOSmodeltype == 'Sun_Ogee':
        adjoint_modelling.adjoint_test_ags(testmodel,x_variables=testx,Hx_variable='dwCOSS_molm2s',y_variable='adwCOSS_molm2s',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=testx,Hx_variable='dwCOSS',y_variable='adwCOSS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_ags(testmodel,x_variables=testx,Hx_variable='dwCOS',y_variable='adwCOS',HTy_variables=testHTy,printmode=printmodeadj)

if gradtest_ags:
    if not testinput.ls_type == 'ags':
        raise Exception('Set ls_type to ags for the ags gradient tests')
    testlist_ags = ['thetasurf','Ts','e','CO2','CO2surf','PARfract','Swin','cveg','w2','wfc','wwilt','sca_sto','LAI','wg','Tsoil','E0','R10','ra','COS','COSsurf','gciCOS']
    print('gradient tests of ags:')
    testdstate_ags = {'dthetasurf':1.0,'dTs':1.0,'de':1.0,'dCO2':1.0,'dCO2surf':1.0,'dPARfract':1.0,'dSwin':1.0,'dcveg':1.0,'dw2':1.0,'dwfc':1.0,'dwwilt':1.0,'dsca_sto':1.0,'dLAI':1.0,'dwg':1.0,'dTsoil':1.0,'dE0':1.0,'dR10':1.0,'dra':1.0,'dCOS':1.0,'dCOSsurf':1.0,'dgciCOS':1.0}
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'CO2comp',{'dthetasurf':1.0},'dCO2comp_dthetasurf',printmode)   
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'gm1',{'dthetasurf':1.0},'dgm1_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'gm2',{'dthetasurf':1.0},'dgm2_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'gm3',{'dthetasurf':1.0},'dgm3_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'gm',{'dthetasurf':1.0},'dgm_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'fmin0',{'dthetasurf':1.0},'dfmin0_dthetasurf',printmode)   
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'sqrtf',{'dthetasurf':1.0},'dsqrtf_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'sqterm',{'dthetasurf':1.0},'dsqterm_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'fmin',{'dthetasurf':1.0},'dfmin_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'D0',{'dthetasurf':1.0},'dD0_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'Ds',{'dTs':1.0},'dDs_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'Ds',{'de':1.0},'dDs_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'cfrac',{'dTs':1.0},'dcfrac_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'cfrac',{'de':1.0},'dcfrac_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'co2abs',{'dCO2':1.0,'dCO2surf':1.0},'dco2abs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'ci',{'dthetasurf':1.0},'dci_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'ci',{'dTs':1.0},'dci_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'ci',{'de':1.0},'dci_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'ci',{'dCO2':1.0,'dCO2surf':1.0},'dci_dCO2',printmode)    
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'Ammax1',{'dthetasurf':1.0},'dAmmax1_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'Ammax2',{'dthetasurf':1.0},'dAmmax2_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'Ammax3',{'dthetasurf':1.0},'dAmmax3_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'Ammax',{'dthetasurf':1.0},'dAmmax_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['w2'],'betaw',{'dw2':1.0},'dbetaw_dw2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wfc'],'betaw',{'dwfc':1.0},'dbetaw_dwfc',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wwilt'],'betaw',{'dwwilt':1.0},'dbetaw_dwwilt',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['w2'],'fstr',{'dw2':1.0},'dfstr_dw2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wfc'],'fstr',{'dwfc':1.0},'dfstr_dwfc',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wwilt'],'fstr',{'dwwilt':1.0},'dfstr_dwwilt',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'aexp',{'dthetasurf':1.0},'daexp_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'aexp',{'dTs':1.0},'daexp_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'aexp',{'de':1.0},'daexp_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'aexp',{'dCO2':1.0,'dCO2surf':1.0},'daexp_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'Am',{'dthetasurf':1.0},'dAm_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'Am',{'dTs':1.0},'dAm_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'Am',{'de':1.0},'dAm_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'Am',{'dCO2':1.0,'dCO2surf':1.0},'dAm_dCO2',printmode)    
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'Rdark',{'dthetasurf':1.0},'dRdark_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'Rdark',{'dTs':1.0},'dRdark_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'Rdark',{'de':1.0},'dRdark_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'Rdark',{'dCO2':1.0,'dCO2surf':1.0},'dRdark_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'AmRdark',{'dthetasurf':1.0},'dAmRdark_dthetasurf',printmode)   
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'AmRdark',{'dTs':1.0},'dAmRdark_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'AmRdark',{'de':1.0},'dAmRdark_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'AmRdark',{'dCO2':1.0,'dCO2surf':1.0},'dAmRdark_dCO2',printmode)
    #dSwina_dSwin cannot be tested
    adjoint_modelling.grad_test_ags(testmodel,['PARfract'],'PAR',{'dPARfract':1.0},'dPAR_dPARfract',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Swin'],'PAR',{'dSwin':1.0},'dPAR_dSwin',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['cveg'],'PAR',{'dcveg':1.0},'dPAR_dcveg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'xdiv',{'dthetasurf':1.0},'dxdiv_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'xdiv',{'dCO2':1.0,'dCO2surf':1.0},'dxdiv_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'alphac',{'dthetasurf':1.0},'dalphac_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'alphac',{'dCO2':1.0,'dCO2surf':1.0},'dalphac_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'pexp',{'dthetasurf':1.0},'dpexp_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'pexp',{'dTs':1.0},'dpexp_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'pexp',{'de':1.0},'dpexp_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'pexp',{'dCO2':1.0,'dCO2surf':1.0},'dpexp_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['PARfract'],'pexp',{'dPARfract':1.0},'dpexp_dPARfract',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Swin'],'pexp',{'dSwin':1.0},'dpexp_dSwin',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['cveg'],'pexp',{'dcveg':1.0},'dpexp_dcveg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf','Ts','e','CO2','PARfract','Swin','cveg'],'Ag',{'dthetasurf':1.0,'dTs':1.0,'de':1.0,'dCO2':1.0,'dPARfract':1.0,'dSwin':1.0,'dcveg':1.0},'dAg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'y',{'dthetasurf':1.0},'dy_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'y',{'dTs':1.0},'dy_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'y',{'de':1.0},'dy_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'y',{'dCO2':1.0,'dCO2surf':1.0},'dy_dCO2',printmode)    
    adjoint_modelling.grad_test_ags(testmodel,['PARfract'],'y',{'dPARfract':1.0},'dy_dPARfract',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Swin'],'y',{'dSwin':1.0},'dy_dSwin',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['cveg'],'y',{'dcveg':1.0},'dy_dcveg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'y1',{'dthetasurf':1.0},'dy1_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'y1',{'dTs':1.0},'dy1_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'y1',{'de':1.0},'dy1_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'y1',{'dCO2':1.0,'dCO2surf':1.0},'dy1_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['PARfract'],'y1',{'dPARfract':1.0},'dy1_dPARfract',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Swin'],'y1',{'dSwin':1.0},'dy1_dSwin',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['cveg'],'y1',{'dcveg':1.0},'dy1_dcveg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['LAI'],'y1',{'dLAI':1.0},'dy1_dLAI',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'sy',{'dthetasurf':1.0},'dsy_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'sy',{'dTs':1.0},'dsy_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'sy',{'de':1.0},'dsy_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'sy',{'dCO2':1.0,'dCO2surf':1.0},'dsy_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['PARfract'],'sy',{'dPARfract':1.0},'dsy_dPARfract',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Swin'],'sy',{'dSwin':1.0},'dsy_dSwin',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['cveg'],'sy',{'dcveg':1.0},'dsy_dcveg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['LAI'],'sy',{'dLAI':1.0},'dsy_dLAI',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'An_temporary',{'dthetasurf':1.0},'dAn_temporary_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'An_temporary',{'dTs':1.0},'dAn_temporary_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'An_temporary',{'de':1.0},'dAn_temporary_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'An_temporary',{'dCO2':1.0,'dCO2surf':1.0},'dAn_temporary_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['PARfract'],'An_temporary',{'dPARfract':1.0},'dAn_temporary_dPARfract',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Swin'],'An_temporary',{'dSwin':1.0},'dAn_temporary_dSwin',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['cveg'],'An_temporary',{'dcveg':1.0},'dAn_temporary_dcveg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['LAI'],'An_temporary',{'dLAI':1.0},'dAn_temporary_dLAI',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'a11',{'dthetasurf':1.0},'da11_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'div1',{'dTs':1.0},'ddiv1_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'div1',{'de':1.0},'ddiv1_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'div2',{'dthetasurf':1.0},'ddiv2_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'div2',{'dTs':1.0},'ddiv2_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'div2',{'de':1.0},'ddiv2_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'div2',{'dCO2':1.0,'dCO2surf':1.0},'ddiv2_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'part1',{'dthetasurf':1.0},'dpart1_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'part1',{'dTs':1.0},'dpart1_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'part1',{'de':1.0},'dpart1_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'part1',{'dCO2':1.0,'dCO2surf':1.0},'dpart1_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['PARfract'],'part1',{'dPARfract':1.0},'dpart1_dPARfract',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Swin'],'part1',{'dSwin':1.0},'dpart1_dSwin',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['cveg'],'part1',{'dcveg':1.0},'dpart1_dcveg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['LAI'],'part1',{'dLAI':1.0},'dpart1_dLAI',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['w2'],'part1',{'dw2':1.0},'dpart1_dw2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wfc'],'part1',{'dwfc':1.0},'dpart1_dwfc',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wwilt'],'part1',{'dwwilt':1.0},'dpart1_dwwilt',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'gcco2',{'dthetasurf':1.0},'dgcco2_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'gcco2',{'dTs':1.0},'dgcco2_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'gcco2',{'de':1.0},'dgcco2_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'gcco2',{'dCO2':1.0,'dCO2surf':1.0},'dgcco2_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['PARfract'],'gcco2',{'dPARfract':1.0},'dgcco2_dPARfract',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Swin'],'gcco2',{'dSwin':1.0},'dgcco2_dSwin',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['cveg'],'gcco2',{'dcveg':1.0},'dgcco2_dcveg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['w2'],'gcco2',{'dw2':1.0},'dgcco2_dw2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wfc'],'gcco2',{'dwfc':1.0},'dgcco2_dwfc',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wwilt'],'gcco2',{'dwwilt':1.0},'dgcco2_dwwilt',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['sca_sto'],'gcco2',{'dsca_sto':1.0},'dgcco2_dsca_sto',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['LAI'],'gcco2',{'dLAI':1.0},'dgcco2_dLAI',printmode)
    adjoint_modelling.grad_test_ags(testmodel,testlist_ags,'gcco2',testdstate_ags,'dgcco2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'gctCOS',{'dthetasurf':1.0},'dgctCOS_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'gctCOS',{'dTs':1.0},'dgctCOS_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'gctCOS',{'de':1.0},'dgctCOS_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'gctCOS',{'dCO2':1.0,'dCO2surf':1.0},'dgctCOS_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['PARfract'],'gctCOS',{'dPARfract':1.0},'dgctCOS_dPARfract',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Swin'],'gctCOS',{'dSwin':1.0},'dgctCOS_dSwin',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['cveg'],'gctCOS',{'dcveg':1.0},'dgctCOS_dcveg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['w2'],'gctCOS',{'dw2':1.0},'dgctCOS_dw2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wfc'],'gctCOS',{'dwfc':1.0},'dgctCOS_dwfc',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wwilt'],'gctCOS',{'dwwilt':1.0},'dgctCOS_dwwilt',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['sca_sto'],'gctCOS',{'dsca_sto':1.0},'dgctCOS_dsca_sto',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['LAI'],'gctCOS',{'dLAI':1.0},'dgctCOS_dLAI',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['gciCOS'],'gctCOS',{'dgciCOS':1.0},'dgctCOS_dgciCOS',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf','Ts','e','CO2','PARfract','Swin','cveg','w2','wfc','wwilt','sca_sto','LAI','gciCOS'],'gctCOS',{'dthetasurf':1.0,'dTs':1.0,'de':1.0,'dCO2':1.0,'dPARfract':1.0,'dSwin':1.0,'dcveg':1.0,'dw2':1.0,'dwfc':1.0,'dwwilt':1.0,'dsca_sto':1.0,'dLAI':1.0,'dgciCOS':1.0},'dgctCOS',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf','Ts','e','CO2','PARfract','Swin','cveg','w2','wfc','wwilt','sca_sto','LAI'],'rs',{'dthetasurf':1.0,'dTs':1.0,'de':1.0,'dCO2':1.0,'dPARfract':1.0,'dSwin':1.0,'dcveg':1.0,'dw2':1.0,'dwfc':1.0,'dwwilt':1.0,'dsca_sto':1.0,'dLAI':1.0},'drs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'rsCO2',{'dthetasurf':1.0},'drsCO2_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'rsCO2',{'dTs':1.0},'drsCO2_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'rsCO2',{'de':1.0},'drsCO2_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'rsCO2',{'dCO2':1.0,'dCO2surf':1.0},'drsCO2_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['PARfract'],'rsCO2',{'dPARfract':1.0},'drsCO2_dPARfract',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Swin'],'rsCO2',{'dSwin':1.0},'drsCO2_dSwin',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['cveg'],'rsCO2',{'dcveg':1.0},'drsCO2_dcveg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['w2'],'rsCO2',{'dw2':1.0},'drsCO2_dw2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wfc'],'rsCO2',{'dwfc':1.0},'drsCO2_dwfc',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wwilt'],'rsCO2',{'dwwilt':1.0},'drsCO2_dwwilt',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['sca_sto'],'rsCO2',{'dsca_sto':1.0},'drsCO2_dsca_sto',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['LAI'],'rsCO2',{'dLAI':1.0},'drsCO2_dLAI',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['thetasurf'],'An',{'dthetasurf':1.0},'dAn_dthetasurf',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Ts'],'An',{'dTs':1.0},'dAn_dTs',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['e'],'An',{'de':1.0},'dAn_de',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['CO2','CO2surf'],'An',{'dCO2':1.0,'dCO2surf':1.0},'dAn_dCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['ra'],'An',{'dra':1.0},'dAn_dra',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['PARfract'],'An',{'dPARfract':1.0},'dAn_dPARfract',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Swin'],'An',{'dSwin':1.0},'dAn_dSwin',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['cveg'],'An',{'dcveg':1.0},'dAn_dcveg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['w2'],'An',{'dw2':1.0},'dAn_dw2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wfc'],'An',{'dwfc':1.0},'dAn_dwfc',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wwilt'],'An',{'dwwilt':1.0},'dAn_dwwilt',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['sca_sto'],'An',{'dsca_sto':1.0},'dAn_dsca_sto',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['LAI'],'An',{'dLAI':1.0},'dAn_dLAI',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wg'],'fw',{'dwg':1.0},'dfw_dwg',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['E0'],'texp',{'dE0':1.0},'dtexp_dE0',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Tsoil'],'texp',{'dTsoil':1.0},'dtexp_dTsoil',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['E0'],'Resp',{'dE0':1.0},'dResp_dE0',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['Tsoil'],'Resp',{'dTsoil':1.0},'dResp_dTsoil',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['wg'],'Resp',{'dwg':1.0},'dResp_dwg',printmode)   
    adjoint_modelling.grad_test_ags(testmodel,['R10'],'Resp',{'dR10':1.0},'dResp_dR10',printmode)  
    adjoint_modelling.grad_test_ags(testmodel,testlist_ags,'wCO2A',testdstate_ags,'dwCO2A',printmode)
    adjoint_modelling.grad_test_ags(testmodel,['E0','wg','Tsoil','R10'],'wCO2R',{'dE0':1.0,'dwg':1.0,'dTsoil':1.0,'dR10':1.0},'dwCO2R',printmode)
    adjoint_modelling.grad_test_ags(testmodel,testlist_ags,'wCO2',testdstate_ags,'dwCO2',printmode)
    adjoint_modelling.grad_test_ags(testmodel,testlist_ags,'wCOSP',testdstate_ags,'dwCOSP',printmode)
    if testinput.soilCOSmodeltype == 'Sun_Ogee':
        adjoint_modelling.grad_test_ags(testmodel,testlist_ags,'wCOSS_molm2s',testdstate_ags,'dwCOSS_molm2s',printmode)
    adjoint_modelling.grad_test_ags(testmodel,testlist_ags,'wCOSS',testdstate_ags,'dwCOSS',printmode)
    adjoint_modelling.grad_test_ags(testmodel,testlist_ags,'wCOS',testdstate_ags,'dwCOS',printmode)
    
if adjointtest_run_mixed_layer:    
    print('adjoint tests of run mixed layer:')
    testx = ['dh','ddeltatheta','dwthetav','dthetav','dustar','ddeltathetav','ddeltaq','ddeltaCO2','ddeltaCOS','dM','dwtheta','dadvtheta','dwq',
                'dwqM','dadvq','dwCO2','dwCO2M','dadvCO2','dwCOS','dwCOSM','dadvCOS','dlcl','ddz_h','dgammatheta','dgammatheta2','dgammaq','dgammaCO2','dgammaCOS','ddivU','du','dv','dadvu','dadvv','dfc','ddeltau','ddeltav','duw','dvw','dgammau','dgammav','ddFz','dbeta']
    testHTy = (['a'+item for item in testx])
    if(not testinput.sw_sl):
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='duw_dustar',y_variable='aduw_dustar',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='duw_du',y_variable='aduw_du',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='duw_dv',y_variable='aduw_dv',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='duw',y_variable='aduw',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dvw_dustar',y_variable='advw_dustar',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dvw_du',y_variable='advw_du',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dvw_dv',y_variable='advw_dv',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dvw',y_variable='advw',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dws',y_variable='adws',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dw_th_ft',y_variable='adw_th_ft',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dw_q_ft',y_variable='adw_q_ft',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dw_CO2_ft',y_variable='adw_CO2_ft',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dw_COS_ft',y_variable='adw_COS_ft',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwf',y_variable='adwf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwstar_dh',y_variable='adwstar_dh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwstar_dwthetav',y_variable='adwstar_dwthetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwstar_dthetav',y_variable='adwstar_dthetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwstar',y_variable='adwstar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwthetave',y_variable='adwthetave',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwe_dwthetav',y_variable='adwe_dwthetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwe_dustar',y_variable='adwe_dustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwe_dthetav',y_variable='adwe_dthetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwe_dh',y_variable='adwe_dh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwe_ddeltathetav',y_variable='adwe_ddeltathetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwe',y_variable='adwe',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwthetae',y_variable='adwthetae',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwqe',y_variable='adwqe',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwCO2e',y_variable='adwCO2e',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dwCOSe',y_variable='adwCOSe',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dhtend',y_variable='adhtend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dthetatend',y_variable='adthetatend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dqtend',y_variable='adqtend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dCO2tend',y_variable='adCO2tend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dCOStend',y_variable='adCOStend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltathetatend',y_variable='addeltathetatend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltaqtend',y_variable='addeltaqtend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltaCO2tend',y_variable='addeltaCO2tend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltaCOStend',y_variable='addeltaCOStend',HTy_variables=testHTy,printmode=printmodeadj)
    if(testinput.sw_wind):
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dutend',y_variable='adutend',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='dvtend',y_variable='advtend',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltautend',y_variable='addeltautend',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltavtend',y_variable='addeltavtend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddztend',y_variable='addztend',HTy_variables=testHTy,printmode=printmodeadj)
    
if gradtest_run_mixed_layer:
    print('gradient tests of run mixed layer:')
    testlist = ['h','deltatheta','wthetav','thetav','ustar','deltathetav','deltaq','deltaCO2','deltaCOS','M','wtheta','advtheta','wq',
                'wqM','advq','wCO2','wCO2M','advCO2','wCOS','wCOSM','advCOS','lcl','dz_h','gammatheta','gammatheta2','gammaq','gammaCO2','gammaCOS','divU','u','v','advu','advv','fc','deltau','deltav','uw','vw','gammau','gammav','dFz','beta']
    testdstate = {'dh':1.0,'ddeltatheta':1.0,'dwthetav':1.0,'dthetav':1.0,'dustar':1.0,'ddeltathetav':1.0,'ddeltaq':1.0,'ddeltaCO2':1.0,'ddeltaCOS':1.0,'dM':1.0,'dwtheta':1.0,'dadvtheta':1.0,'dwq':1.0,
                  'dwqM':1.0,'dadvq':1.0,'dwCO2':1.0,'dwCO2M':1.0,'dadvCO2':1.0,'dwCOS':1.0,'dwCOSM':1.0,'dadvCOS':1.0,'dlcl':1.0,'ddz_h':1.0,'dgammatheta':1.0,'dgammatheta2':1.0,'dgammaq':1.0,'dgammaCO2':1.0,'dgammaCOS':1.0,'ddivU':1.0,
                  'du':1.0,'dv':1.0,'dadvu':1.0,'dadvv':1.0,'dfc':1.0,'ddeltau':1.0,'ddeltav':1.0,'duw':1.0,'dvw':1.0,'dgammau':1.0,'dgammav':1.0,'ddFz':1.0,'dbeta':1.0}
    if(not testinput.sw_sl):
        adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'uw',testdstate,'duw',printmode)
        adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'vw',testdstate,'dvw',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['h'],'ws',{'dh':1.0},'dws',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'ws',testdstate,'dws',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['h'],'w_th_ft',{'dh':1.0},'dw_th_ft',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'w_th_ft',testdstate,'dw_th_ft',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['h'],'w_q_ft',{'dh':1.0},'dw_q_ft',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'w_q_ft',testdstate,'dw_q_ft',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['h'],'w_CO2_ft',{'dh':1.0},'dw_CO2_ft',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'w_CO2_ft',testdstate,'dw_CO2_ft',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['h'],'w_COS_ft',{'dh':1.0},'dw_COS_ft',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'w_COS_ft',testdstate,'dw_COS_ft',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['deltatheta'],'wf',{'ddeltatheta':1.0},'dwf',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['dFz'],'wf',{'ddFz':1.0},'dwf',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['deltatheta','dFz'],'wf',{'ddeltatheta':1.0,'ddFz':1.0},'dwf',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'wf',testdstate,'dwf',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['h'],'wstar',{'dh':1.0},'dwstar_dh',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['wthetav'],'wstar',{'dwthetav':1.0},'dwstar_dwthetav',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['thetav'],'wstar',{'dthetav':1.0},'dwstar_dthetav',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['thetav'],'wstar',{'dthetav':1.0},'dwstar',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'wstar',testdstate,'dwstar',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['wthetav'],'wthetave',{'dwthetav':1.0},'dwthetave',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'wthetave',testdstate,'dwthetave',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['wthetav'],'we',{'dwthetav':1.0},'dwe_dwthetav',printmode)
    #adjoint_modelling.grad_test_run_mixed_layer(testmodel,['ustar'],'we',{'dustar':1.0},'dwe_dustar',printmode) #this can fail, better to use 'dwe' as in the test below:
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['ustar'],'we',{'dustar':1.0},'dwe',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['thetav'],'we',{'dthetav':1.0},'dwe_dthetav',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['h'],'we',{'dh':1.0},'dwe_dh',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,['deltathetav'],'we',{'ddeltathetav':1.0},'dwe_ddeltathetav',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'we',testdstate,'dwe',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'wthetae',testdstate,'dwthetae',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'wqe',testdstate,'dwqe',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'wCO2e',testdstate,'dwCO2e',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'wCOSe',testdstate,'dwCOSe',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'htend',testdstate,'dhtend',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'thetatend',testdstate,'dthetatend',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'qtend',testdstate,'dqtend',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'CO2tend',testdstate,'dCO2tend',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'COStend',testdstate,'dCOStend',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'deltathetatend',testdstate,'ddeltathetatend',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'deltaqtend',testdstate,'ddeltaqtend',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'deltaCO2tend',testdstate,'ddeltaCO2tend',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'deltaCOStend',testdstate,'ddeltaCOStend',printmode)
    if(testinput.sw_wind):
        adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'utend',testdstate,'dutend',printmode)
        adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'vtend',testdstate,'dvtend',printmode)
        adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'deltautend',testdstate,'ddeltautend',printmode)
        adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'deltavtend',testdstate,'ddeltavtend',printmode)
    adjoint_modelling.grad_test_run_mixed_layer(testmodel,testlist,'dztend',testdstate,'ddztend',printmode)

if adjointtest_int_mixed_layer:    
    print('adjoint tests of integrate mixed layer:')
    testx = ['dh','dtheta','ddeltatheta','dq','ddeltaq','dCO2','dCOS','ddeltaCO2','ddeltaCOS','du','ddeltau','dv','ddeltav','ddz_h','dhtend','dthetatend',
                'ddeltathetatend','dqtend','ddeltaqtend','dCO2tend','dCOStend','ddeltaCO2tend','ddeltaCOStend','ddztend','dutend','ddeltautend','dvtend','ddeltavtend']
    testHTy = ['adh','adtheta','addeltatheta','adq','addeltaq','adCO2','adCOS','addeltaCO2','addeltaCOS','adu','addeltau','adv','addeltav','addz_h','adhtend','adthetatend',
                'addeltathetatend','adqtend','addeltaqtend','adCO2tend','adCOStend','addeltaCO2tend','addeltaCOStend','addztend','adutend','addeltautend','advtend','addeltavtend']
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dh0',y_variable='adh0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dtheta0',y_variable='adtheta0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltatheta0',y_variable='addeltatheta0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dq0',y_variable='adq0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltaq0',y_variable='addeltaq0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dCO20',y_variable='adCO20',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dCOS0',y_variable='adCOS0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltaCO20',y_variable='addeltaCO20',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltaCOS0',y_variable='addeltaCOS0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='du0',y_variable='adu0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltau0',y_variable='addeltau0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dv0',y_variable='adv0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltav0',y_variable='addeltav0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dh',y_variable='adh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dtheta',y_variable='adtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltatheta',y_variable='addeltatheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dq',y_variable='adq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltaq',y_variable='addeltaq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dCO2',y_variable='adCO2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dCOS',y_variable='adCOS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltaCO2',y_variable='addeltaCO2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltaCOS',y_variable='addeltaCOS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddz0',y_variable='addz0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddz_h',y_variable='addz_h',HTy_variables=testHTy,printmode=printmodeadj)
    if(testinput.sw_wind):
        adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='du',y_variable='adu',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltau',y_variable='addeltau',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='dv',y_variable='adv',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_int_mixed_layer(testmodel,x_variables=testx,Hx_variable='ddeltav',y_variable='addeltav',HTy_variables=testHTy,printmode=printmodeadj)

if gradtest_int_mixed_layer:
    print('gradient tests of integrate mixed layer:')
    testlist = ['h','theta','deltatheta','q','deltaq','CO2','COS','deltaCO2','deltaCOS','u','deltau','v','deltav','dz_h','htend','thetatend',
                'deltathetatend','qtend','deltaqtend','CO2tend','COStend','deltaCO2tend','deltaCOStend','dztend','utend','deltautend','vtend','deltavtend']
    testdstate = {'dh':1.0,'dtheta':1.0,'ddeltatheta':1.0,'dq':1.0,'ddeltaq':1.0,'dCO2':1.0,'dCOS':1.0,'ddeltaCO2':1.0,'ddeltaCOS':1.0,'du':1.0,'ddeltau':1.0,'dv':1.0,'ddeltav':1.0,'ddz_h':1.0,'dhtend':1.0,'dthetatend':1.0,
                  'ddeltathetatend':1.0,'dqtend':1.0,'ddeltaqtend':1.0,'dCO2tend':1.0,'dCOStend':1.0,'ddeltaCO2tend':1.0,'ddeltaCOStend':1.0,'ddztend':1.0,'dutend':1.0,'ddeltautend':1.0,'dvtend':1.0,'ddeltavtend':1.0}
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'h0',testdstate,'dh0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'theta0',testdstate,'dtheta0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltatheta0',testdstate,'ddeltatheta0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'q0',testdstate,'dq0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltaq0',testdstate,'ddeltaq0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'CO20',testdstate,'dCO20',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'COS0',testdstate,'dCOS0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltaCO20',testdstate,'ddeltaCO20',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltaCOS0',testdstate,'ddeltaCOS0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'u0',testdstate,'du0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltau0',testdstate,'ddeltau0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'v0',testdstate,'dv0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltav0',testdstate,'ddeltav0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'h',testdstate,'dh',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'theta',testdstate,'dtheta',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltatheta',testdstate,'ddeltatheta',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'q',testdstate,'dq',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltaq',testdstate,'ddeltaq',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'CO2',testdstate,'dCO2',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'COS',testdstate,'dCOS',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltaCO2',testdstate,'ddeltaCO2',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltaCOS',testdstate,'ddeltaCOS',printmode)
    #the following statement cannot be fully tested, since it is redefined in the same module
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'dz0',testdstate,'ddz0',printmode)
    adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'dz_h',testdstate,'ddz_h',printmode)
    if testinput.sw_wind:
        adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'u',testdstate,'du',printmode)
        adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltau',testdstate,'ddeltau',printmode)
        adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'v',testdstate,'dv',printmode)
        adjoint_modelling.grad_test_int_mixed_layer(testmodel,testlist,'deltav',testdstate,'ddeltav',printmode)

if adjointtest_run_radiation:    
    print('adjoint tests of run radiation:')
    testx = ['ddoy','dlat','dlon','dtheta','dh','dcc','dalpha','dTs']
    testHTy = ['addoy','adlat','adlon','adtheta','adh','adcc','adalpha','adTs']
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dsda',y_variable='adsda',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dpart1_sinlea',y_variable='adpart1_sinlea',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dsinlea_lon',y_variable='adsinlea_lon',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dpart2_sinlea',y_variable='adpart2_sinlea',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dsinlea',y_variable='adsinlea',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dTa_dtheta',y_variable='adTa_dtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dTa_dh',y_variable='adTa_dh',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dTa',y_variable='adTa',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dTr',y_variable='adTr',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dSwin',y_variable='adSwin',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dSwout',y_variable='adSwout',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dLwin',y_variable='adLwin',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dLwout',y_variable='adLwout',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_radiation(testmodel,x_variables=testx,Hx_variable='dQ',y_variable='adQ',HTy_variables=testHTy,printmode=printmodeadj)

if gradtest_run_radiation:
    print('gradient tests of run radiation:')
    testlist = ['doy','lat','lon','theta','h','cc','alpha','Ts']
    testdstate = {'ddoy':1.0,'dlat':1.0,'dlon':1.0,'dtheta':1.0,'dh':1.0,'dcc':1.0,'dalpha':1.0,'dTs':1.0}
    adjoint_modelling.grad_test_run_radiation(testmodel,['doy'],'sda',{'ddoy':1.0},'dsda',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,testlist,'part1_sinlea',testdstate,'dpart1_sinlea',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,testlist,'sinlea_lon',testdstate,'dsinlea_lon',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,testlist,'part2_sinlea',testdstate,'dpart2_sinlea',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,testlist,'sinlea',testdstate,'dsinlea',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,['theta'],'Ta',{'dtheta':1.0},'dTa_dtheta',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,['h'],'Ta',{'dh':1.0},'dTa_dh',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,testlist,'Ta',testdstate,'dTa',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,testlist,'Tr',testdstate,'dTr',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,testlist,'Swin',testdstate,'dSwin',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,testlist,'Swout',testdstate,'dSwout',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,testlist,'Lwin',testdstate,'dLwin',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,testlist,'Lwout',testdstate,'dLwout',printmode)
    adjoint_modelling.grad_test_run_radiation(testmodel,testlist,'Q',testdstate,'dQ',printmode)

if adjointtest_run_land_surface:    
    print('adjoint tests of run land surface:')
    testx = ['du','dv','dwstar','dCs','dtheta','dq','dwfc','dwwilt','dwg','dLAI','dWmax','dWl','dcveg','dQ','dLambda','dTsoil','drsmin','dwsat','dw2','dT2','drssoilmin','dCGsat','db','da','dp','dC1sat','dC2ref']
    #testHTy = ['adu','adv','adwstar','adCs','adtheta','adq','adwfc','adwwilt','adwg','adLAI','adWmax','adWl','adcveg','adQ','adLambda','adTsoil','adrsmin','adwsat','adw2','adT2','arssoilmin']
    testHTy = (['a'+item for item in testx])
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dueff',y_variable='adueff',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dra',y_variable='adra',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='desatvar',y_variable='adesatvar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dqsatvar',y_variable='adqsatvar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='ddesatdT_dtheta',y_variable='addesatdT_dtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='ddqsatdT_dtheta',y_variable='addqsatdT_dtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='de',y_variable='ade',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='drs',y_variable='adrs',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='df2',y_variable='adf2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='drssoil',y_variable='adrssoil',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dWlmx',y_variable='adWlmx',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dcliq',y_variable='adcliq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp1_numerator_Ts',y_variable='adp1_numerator_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp2_numerator_Ts',y_variable='adp2_numerator_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp3_numerator_Ts',y_variable='adp3_numerator_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp4_numerator_Ts',y_variable='adp4_numerator_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp5_numerator_Ts',y_variable='adp5_numerator_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dnumerator_Ts',y_variable='adnumerator_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp1_denominator_Ts',y_variable='adp1_denominator_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp2_denominator_Ts',y_variable='adp2_denominator_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp3_denominator_Ts',y_variable='adp3_denominator_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp4_denominator_Ts',y_variable='adp4_denominator_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='ddenominator_Ts',y_variable='addenominator_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dTs',y_variable='adTs',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='desatsurf',y_variable='adesatsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dqsatsurf',y_variable='adqsatsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp1_LEveg',y_variable='adp1_LEveg',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp2_LEveg_liq_soil',y_variable='adp2_LEveg_liq_soil',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dLEveg',y_variable='adLEveg',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp1_LEliq',y_variable='adp1_LEliq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dLEliq',y_variable='adLEliq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp1_LEsoil',y_variable='adp1_LEsoil',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dLEsoil',y_variable='adLEsoil',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dWltend',y_variable='adWltend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dLE',y_variable='adLE',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dH',y_variable='adH',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dG',y_variable='adG',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp1_numerator_LEpot',y_variable='adp1_numerator_LEpot',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp2_numerator_LEpot',y_variable='adp2_numerator_LEpot',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dnumerator_LEpot',y_variable='adnumerator_LEpot',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dLEpot',y_variable='adLEpot',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp1_numerator_LEref',y_variable='adp1_numerator_LEref',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dp2_numerator_LEref',y_variable='adp2_numerator_LEref',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dnumerator_LEref',y_variable='adnumerator_LEref',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='ddenominator_LEref',y_variable='addenominator_LEref',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dLEref',y_variable='adLEref',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dCG_dCGsat',y_variable='adCG_dCGsat',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dCG_dwsat',y_variable='adCG_dwsat',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dCG_dw2',y_variable='adCG_dw2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dCG_db',y_variable='adCG_db',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dCG',y_variable='adCG',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dTsoiltend_dCG',y_variable='adTsoiltend_dCG',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dTsoiltend_dG',y_variable='adTsoiltend_dG',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dTsoiltend_dTsoil',y_variable='adTsoiltend_dTsoil',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dTsoiltend_dT2',y_variable='adTsoiltend_dT2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dTsoiltend',y_variable='adTsoiltend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dC1_dC1sat',y_variable='adC1_dC1sat',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dC1_dwsat',y_variable='adC1_dwsat',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dC1_dwg',y_variable='adC1_dwg',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dC1_db',y_variable='adC1_db',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dC1',y_variable='adC1',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dC2_dC2ref',y_variable='adC2_dC2ref',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dC2_dw2',y_variable='adC2_dw2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dC2_dwsat',y_variable='adC2_dwsat',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dC2',y_variable='adC2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwgeq_dw2',y_variable='adwgeq_dw2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwgeq_dwsat',y_variable='adwgeq_dwsat',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwgeq_da',y_variable='adwgeq_da',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwgeq_dp',y_variable='adwgeq_dp',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwgeq',y_variable='adwgeq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwgtend_dLEsoil',y_variable='adwgtend_dLEsoil',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwgtend_dC1',y_variable='adwgtend_dC1',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwgtend_dC2',y_variable='adwgtend_dC2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwgtend_dwg',y_variable='adwgtend_dwg',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwgtend_dwgeq',y_variable='adwgtend_dwgeq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwgtend',y_variable='adwgtend',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwtheta',y_variable='adwtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_land_surface(testmodel,x_variables=testx,Hx_variable='dwq',y_variable='adwq',HTy_variables=testHTy,printmode=printmodeadj)

if gradtest_run_land_surface:
    print('gradient tests of run land surface:')
#    testlist = ['wstar','Cs','theta','q','wfc','wwilt','wg','LAI','Wmax','Wl','cveg','Q','Lambda','Tsoil','rsmin','wsat','w2','T2']
#    testdstate = {'dwstar':1.0,'dCs':1.0,'dtheta':1.0,'dq':1.0,'dwfc':1.0,'dwwilt':1.0,'dwg':1.0,'dLAI':1.0,'dWmax':1.0,'dWl':1.0,'dcveg':1.0,
#                  'dQ':1.0,'dLambda':1.0,'dTsoil':1.0,'drsmin':1.0,'dwsat':1.0,'dw2':1.0,'dT2':1.0}
    testlist = ['u','v','wstar','Cs','theta','q','wfc','wwilt','wg','LAI','Wmax','Wl','cveg','Q','Lambda','Tsoil','rsmin','wsat','w2','T2','rssoilmin','CGsat','b','a','p','C1sat','C2ref']
#    testdstate = {'du':1.0,'dv':1.0,'dwstar':1.0,'dCs':1.0,'dtheta':1.0,'dq':1.0,'dwfc':1.0,'dwwilt':1.0,'dwg':1.0,'dLAI':1.0,'dWmax':1.0,'dWl':1.0,'dcveg':1.0,
#                  'dQ':1.0,'dLambda':1.0,'dTsoil':1.0,'drsmin':1.0,'dwsat':1.0,'dw2':1.0,'dT2':1.0,'drssoilmin':1.0}
    testdstate = {}
    for item in testlist:
        testdstate['d'+item] = 1.0
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'ueff',testdstate,'dueff',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'esatvar',testdstate,'desatvar',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'qsatvar',testdstate,'dqsatvar',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'desatdT',testdstate,'ddesatdT_dtheta',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'dqsatdT',testdstate,'ddqsatdT_dtheta',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'e',testdstate,'de',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'f2',testdstate,'df2',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'rssoil',testdstate,'drssoil',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'Wlmx',testdstate,'dWlmx',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'cliq',testdstate,'dcliq',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p1_numerator_Ts',testdstate,'dp1_numerator_Ts',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p2_numerator_Ts',testdstate,'dp2_numerator_Ts',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p3_numerator_Ts',testdstate,'dp3_numerator_Ts',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p4_numerator_Ts',testdstate,'dp4_numerator_Ts',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p5_numerator_Ts',testdstate,'dp5_numerator_Ts',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'numerator_Ts',testdstate,'dnumerator_Ts',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p1_denominator_Ts',testdstate,'dp1_denominator_Ts',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p2_denominator_Ts',testdstate,'dp2_denominator_Ts',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p3_denominator_Ts',testdstate,'dp3_denominator_Ts',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p4_denominator_Ts',testdstate,'dp4_denominator_Ts',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'denominator_Ts',testdstate,'ddenominator_Ts',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'Ts',testdstate,'dTs',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'esatsurf',testdstate,'desatsurf',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'qsatsurf',testdstate,'dqsatsurf',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p1_LEveg',testdstate,'dp1_LEveg',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p2_LEveg_liq_soil',testdstate,'dp2_LEveg_liq_soil',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'LEveg',testdstate,'dLEveg',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p1_LEliq',testdstate,'dp1_LEliq',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'LEliq',testdstate,'dLEliq',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p1_LEsoil',testdstate,'dp1_LEsoil',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'LEsoil',testdstate,'dLEsoil',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'Wltend',testdstate,'dWltend',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'LE',testdstate,'dLE',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'H',testdstate,'dH',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'G',testdstate,'dG',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p1_numerator_LEpot',testdstate,'dp1_numerator_LEpot',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p2_numerator_LEpot',testdstate,'dp2_numerator_LEpot',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'numerator_LEpot',testdstate,'dnumerator_LEpot',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'LEpot',testdstate,'dLEpot',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p1_numerator_LEref',testdstate,'dp1_numerator_LEref',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'p2_numerator_LEref',testdstate,'dp2_numerator_LEref',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'numerator_LEref',testdstate,'dnumerator_LEref',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'denominator_LEref',testdstate,'ddenominator_LEref',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'LEref',testdstate,'dLEref',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'CG',testdstate,'dCG',printmode)
    #cannot test individual statements such as dTsoiltend_dCG
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'Tsoiltend',testdstate,'dTsoiltend',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'C1',testdstate,'dC1',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'C2',testdstate,'dC2',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,['a'],'wgeq',{'da':1.0},'dwgeq',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,['p'],'wgeq',{'dp':1.0},'dwgeq',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'wgeq',testdstate,'dwgeq',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'wgtend',testdstate,'dwgtend',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'wtheta',testdstate,'dwtheta',printmode)
    adjoint_modelling.grad_test_run_land_surface(testmodel,testlist,'wq',testdstate,'dwq',printmode)
    
if adjointtest_int_land_surface:    
    print('adjoint tests of integrate land surface:')
    testx = ['dTsoil','dwg','dWl','dTsoiltend','dwgtend','dWltend']
    testHTy = ['adTsoil','adwg','adWl','adTsoiltend','adwgtend','adWltend']
    adjoint_modelling.adjoint_test_int_land_surface(testmodel,x_variables=testx,Hx_variable='dTsoil0',y_variable='adTsoil0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_land_surface(testmodel,x_variables=testx,Hx_variable='dwg0',y_variable='adwg0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_land_surface(testmodel,x_variables=testx,Hx_variable='dWl0',y_variable='adWl0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_land_surface(testmodel,x_variables=testx,Hx_variable='dTsoil',y_variable='adTsoil',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_land_surface(testmodel,x_variables=testx,Hx_variable='dwg',y_variable='adwg',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_int_land_surface(testmodel,x_variables=testx,Hx_variable='dWl',y_variable='adWl',HTy_variables=testHTy,printmode=printmodeadj)

if gradtest_int_land_surface:
    print('gradient tests of integrate land surface:')
    testlist = ['Tsoil','wg','Wl','Tsoiltend','wgtend','Wltend']
    testdstate = {'dTsoil':1.0,'dwg':1.0,'dWl':1.0,'dTsoiltend':1.0,'dwgtend':1.0,'dWltend':1.0}
    adjoint_modelling.grad_test_int_land_surface(testmodel,testlist,'Tsoil0',testdstate,'dTsoil0',printmode)
    adjoint_modelling.grad_test_int_land_surface(testmodel,testlist,'wg0',testdstate,'dwg0',printmode)
    adjoint_modelling.grad_test_int_land_surface(testmodel,testlist,'Wl0',testdstate,'dWl0',printmode)
    adjoint_modelling.grad_test_int_land_surface(testmodel,testlist,'Tsoil',testdstate,'dTsoil',printmode)
    adjoint_modelling.grad_test_int_land_surface(testmodel,testlist,'wg',testdstate,'dwg',printmode)
    adjoint_modelling.grad_test_int_land_surface(testmodel,testlist,'Wl',testdstate,'dWl',printmode)
    
if adjointtest_statistics:    
    print('adjoint tests of statistics:')
    testx = ['dtheta','dq','dwtheta','dwq','ddeltatheta','ddeltaq','dh','dlcl']
    testHTy = (['a'+item for item in testx])
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dthetav',y_variable='adthetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dwthetav',y_variable='adwthetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='ddeltathetav',y_variable='addeltathetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dP_h',y_variable='adP_h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dT_h',y_variable='adT_h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dqsat_variable_dT_H',y_variable='adqsat_variable_dT_H',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dqsat_variable_dP_H',y_variable='adqsat_variable_dP_H',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dqsat_variable',y_variable='adqsat_variable',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dRH_h',y_variable='adRH_h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dlcl',y_variable='adlcl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=['dlcl'],Hx_variable='dRHlcl',y_variable='adRHlcl',HTy_variables=['adlcl'])
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=['dtheta'],Hx_variable='dRHlcl',y_variable='adRHlcl',HTy_variables=['adtheta'])
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=['dq'],Hx_variable='dRHlcl',y_variable='adRHlcl',HTy_variables=['adq'])
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dRHlcl',y_variable='adRHlcl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dlcl_new',y_variable='adlcl_new',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dp_lcl',y_variable='adp_lcl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dT_lcl',y_variable='adT_lcl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dqsat_variable_dp_lcl',y_variable='adqsat_variable_dp_lcl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_statistics(testmodel,x_variables=testx,Hx_variable='dqsat_variable_dT_lcl',y_variable='adqsat_variable_dT_lcl',HTy_variables=testHTy,printmode=printmodeadj)

if gradtest_statistics:
    print('gradient tests of statistics:')
    testlist = ['theta','q','wtheta','wq','deltatheta','deltaq','h','lcl']
    testdstate = {'dtheta':1.0,'dq':1.0,'dwtheta':1.0,'dwq':1.0,'ddeltatheta':1.0,'ddeltaq':1.0,'dh':1.0,'dlcl':1.0}
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'thetav',testdstate,'dthetav',printmode)
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'wthetav',testdstate,'dwthetav',printmode)
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'deltathetav',testdstate,'ddeltathetav',printmode)
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'P_h',testdstate,'dP_h',printmode)
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'T_h',testdstate,'dT_h',printmode)
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'qsat_variable',testdstate,'dqsat_variable',printmode)
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'RH_h',testdstate,'dRH_h',printmode)
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'lcl',testdstate,'dlcl',printmode)
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'RHlcl',testdstate,'dRHlcl',printmode)
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'lcl',testdstate,'dlcl_new',printmode)
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'p_lcl',testdstate,'dp_lcl',printmode)
    adjoint_modelling.grad_test_statistics(testmodel,testlist,'T_lcl',testdstate,'dT_lcl',printmode)

if adjointtest_run_soil_COS_mod:    
    print('adjoint tests of run_soil_COS_mod:')
    testx = ['dTsoil','dT2','dwg','dw2','dmol_rat_ocs_atm','dairtemp','dwsat','dC_soilair_current','dfCA','dVspmax','dQ10','db_sCOSm']
    testHTy = ['adTsoil','adT2','adwg','adw2','admol_rat_ocs_atm','adairtemp','adwsat','adC_soilair_current','adfCA','adVspmax','adQ10','adb_sCOSm']
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dC_air',y_variable='adC_air',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dT_nodes',y_variable='adT_nodes',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='ds_moist',y_variable='ads_moist',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dkH',y_variable='adkH',HTy_variables=testHTy,printmode=printmodeadj)
    if 	(testinput.uptakemodel == 'Ogee'):
        adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dxCA',y_variable='adxCA',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dktot',y_variable='adktot',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='ds_uptake',y_variable='ads_uptake',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='ds_prod',y_variable='ads_prod',HTy_variables=testHTy,printmode=printmodeadj)
    if testinput.Diffus_type == ('Sun'):
        adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='db_sCOSm',y_variable='adb_sCOSm',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='ddiffus_nodes_dwsat',y_variable='addiffus_nodes_dwsat',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='ddiffus_nodes_ds_moist',y_variable='addiffus_nodes_ds_moist',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='ddiffus_nodes_db_sCOSm',y_variable='addiffus_nodes_db_sCOSm',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='ddiffus_nodes_dT_nodes',y_variable='addiffus_nodes_dT_nodes',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='ddiffus_nodes',y_variable='addiffus_nodes',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dD_a',y_variable='adD_a',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='ddiffus',y_variable='addiffus',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dconduct',y_variable='adconduct',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dsource',y_variable='adsource',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dD_a_0',y_variable='adD_a_0',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='deta',y_variable='adeta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dA_matr',y_variable='adA_matr',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dB_matr',y_variable='adB_matr',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dinvmatreq12',y_variable='adinvmatreq12',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dmatr_2_eq12',y_variable='admatr_2_eq12',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dmatr_3_eq12',y_variable='admatr_3_eq12',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dC_soilair',y_variable='adC_soilair',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dC_soilair_next',y_variable='adC_soilair_next',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dOCS_fluxes',y_variable='adOCS_fluxes',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dCOS_netuptake_soilsun',y_variable='adCOS_netuptake_soilsun',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_soil_COS_mod(testmodel,x_variables=testx,Hx_variable='dC_soilair_current',y_variable='adC_soilair_current',HTy_variables=testHTy,printmode=printmodeadj)
    
   
if gradtest_run_soil_COS_mod:
    #note that for this test testlist and testdstate are different for some vars such as COSsurf, due to the difference in the argument list of the function and that of the function call
    print('gradient tests of run_soil_COS_mod:')
    testlist = ['Tsoil','T2','wg','w2','COSsurf','Tsurf','wsat','C_soilair_current','fCA','Vspmax','Q10','b_sCOSm']
    dstate_item_C_soilair_current = np.ones(testinput.nr_nodes)
    testdstate = {'dTsoil':1.0,'dT2':1.0,'dwg':1.0,'dw2':1.0,'dmol_rat_ocs_atm':1.0,'dairtemp':1.0,'dwsat':1.0,'dC_soilair_current':dstate_item_C_soilair_current,'dfCA':1.0,'dVspmax':1.0,'Q10':1.0,'db_sCOSm':1.0}
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'C_air',testdstate,'dC_air',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'T_nodes',testdstate,'dT_nodes',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'s_moist',testdstate,'ds_moist',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'kH',testdstate,'dkH',printmode)
    if testinput.uptakemodel == 'Ogee':
        adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'xCA',testdstate,'dxCA',printmode)
        adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'ktot',testdstate,'dktot',printmode)
        adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'s_uptake',testdstate,'ds_uptake',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'s_prod',testdstate,'ds_prod',printmode)
    if testinput.Diffus_type == ('Sun'):
        adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'b_sCOSm',testdstate,'db_sCOSm',printmode)
        adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'diffus_nodes',testdstate,'ddiffus_nodes',printmode)
        adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'D_a',testdstate,'dD_a',printmode)
        adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'diffus',testdstate,'ddiffus',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'conduct',testdstate,'dconduct',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'source',testdstate,'dsource',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'D_a_0',testdstate,'dD_a_0',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'eta',testdstate,'deta',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'A_matr',testdstate,'dA_matr',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'B_matr',testdstate,'dB_matr',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'invmatreq12',testdstate,'dinvmatreq12',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'matr_2_eq12',testdstate,'dmatr_2_eq12',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'matr_3_eq12',testdstate,'dmatr_3_eq12',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'C_soilair',testdstate,'dC_soilair',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'C_soilair_next',testdstate,'dC_soilair_next',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'OCS_fluxes',testdstate,'dOCS_fluxes',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'COS_netuptake_soilsun',testdstate,'dCOS_netuptake_soilsun',printmode)
    adjoint_modelling.grad_test_run_soil_COS_mod(testmodel,testlist,'C_soilair_current',testdstate,'dC_soilair_current',printmode)

if adjointtest_store:    
    print('adjoint tests of store:')
    testx = ['dh','dtheta','dthetav','ddeltatheta','ddeltathetav','dwtheta','dwthetav','dwthetae','dwthetave','dq','ddeltaq','dwq','dwqe','dwqM','dqsatvar','desatvar','dCO2','ddeltaCO2','dwCO2','dwCO2A','dwCO2R','dwCO2e','dwCO2M','dwCOS','dwCOSP','dwCOSS','dCOS','ddeltaCOS','du','ddeltau','duw',
             'dv','ddeltav','dvw','dT2m','dthetamh','dthetamh2','dthetamh3','dthetamh4','dthetamh5','dthetamh6','dthetamh7','dTmh','dTmh2','dTmh3','dTmh4','dTmh5','dTmh6','dTmh7','dq2m','dqmh','dqmh2','dqmh3','dqmh4','dqmh5','dqmh6','dqmh7','du2m','dv2m','de2m'
             ,'desat2m','dCOSmh','dCOSmh2','dCOSmh3','dCOSmh4','dCO2mh','dCO2mh2','dCO2mh3','dCO2mh4','dCOS2m','dCO22m','dCOSsurf','dCO2surf','dTsurf','dthetasurf','dthetavsurf','dqsurf','dustar','dCs','dSwin','dSwout','dLwin',
             'dLwout','dQ','dra','drs','dH','dLE','dLEliq','dLEveg','dLEsoil','dLEpot','dLEref','dG','dlcl','dRH_h','dM','ddz_h','dCm','dRib','dL','dTs','de']
    testHTy = (['a'+item for item in testx])
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_h',y_variable='adout_h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_theta',y_variable='adout_theta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_thetav',y_variable='adout_thetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_deltatheta',y_variable='adout_deltatheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_deltathetav',y_variable='adout_deltathetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wtheta',y_variable='adout_wtheta',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wthetav',y_variable='adout_wthetav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wthetae',y_variable='adout_wthetae',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wthetave',y_variable='adout_wthetave',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_q',y_variable='adout_q',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_deltaq',y_variable='adout_deltaq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wq',y_variable='adout_wq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wqe',y_variable='adout_wqe',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wqM',y_variable='adout_wqM',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_qsatvar',y_variable='adout_qsatvar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_esatvar',y_variable='adout_esatvar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_CO2',y_variable='adout_CO2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_deltaCO2',y_variable='adout_deltaCO2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wCO2',y_variable='adout_wCO2',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wCO2A',y_variable='adout_wCO2A',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wCO2R',y_variable='adout_wCO2R',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wCO2e',y_variable='adout_wCO2e',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wCO2M',y_variable='adout_wCO2M',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wCOS',y_variable='adout_wCOS',HTy_variables=testHTy,printmode=printmodeadj)
    if testinput.sw_ls:
        if testinput.ls_type=='ags':
            adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wCOSP',y_variable='adout_wCOSP',HTy_variables=testHTy,printmode=printmodeadj)
            adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_wCOSS',y_variable='adout_wCOSS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_COS',y_variable='adout_COS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_deltaCOS',y_variable='adout_deltaCOS',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_u',y_variable='adout_u',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_deltau',y_variable='adout_deltau',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_uw',y_variable='adout_uw',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_v',y_variable='adout_v',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_deltav',y_variable='adout_deltav',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_vw',y_variable='adout_vw',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_T2m',y_variable='adout_T2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_q2m',y_variable='adout_q2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_u2m',y_variable='adout_u2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_v2m',y_variable='adout_v2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_e2m',y_variable='adout_e2m',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_esat2m',y_variable='adout_esat2m',HTy_variables=testHTy,printmode=printmodeadj)
    
    if testinput.sw_sl:
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_thetamh',y_variable='adout_thetamh',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_thetamh2',y_variable='adout_thetamh2',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_thetamh3',y_variable='adout_thetamh3',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_thetamh4',y_variable='adout_thetamh4',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_thetamh5',y_variable='adout_thetamh5',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_thetamh6',y_variable='adout_thetamh6',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_thetamh7',y_variable='adout_thetamh7',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Tmh',y_variable='adout_Tmh',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Tmh2',y_variable='adout_Tmh2',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Tmh3',y_variable='adout_Tmh3',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Tmh4',y_variable='adout_Tmh4',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Tmh5',y_variable='adout_Tmh5',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Tmh6',y_variable='adout_Tmh6',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Tmh7',y_variable='adout_Tmh7',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_qmh',y_variable='adout_qmh',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_qmh2',y_variable='adout_qmh2',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_qmh3',y_variable='adout_qmh3',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_qmh4',y_variable='adout_qmh4',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_qmh5',y_variable='adout_qmh5',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_qmh6',y_variable='adout_qmh6',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_qmh7',y_variable='adout_qmh7',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_COSmh',y_variable='adout_COSmh',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_COSmh2',y_variable='adout_COSmh2',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_COSmh3',y_variable='adout_COSmh3',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_COSmh4',y_variable='adout_COSmh4',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_CO22m',y_variable='adout_CO22m',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_CO2mh',y_variable='adout_CO2mh',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_CO2mh2',y_variable='adout_CO2mh2',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_CO2mh3',y_variable='adout_CO2mh3',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_CO2mh4',y_variable='adout_CO2mh4',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_COS2m',y_variable='adout_COS2m',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_COSsurf',y_variable='adout_COSsurf',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_CO2surf',y_variable='adout_CO2surf',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Tsurf',y_variable='adout_Tsurf',HTy_variables=testHTy,printmode=printmodeadj)
        adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Cm',y_variable='adout_Cm',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_thetasurf',y_variable='adout_thetasurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_thetavsurf',y_variable='adout_thetavsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_qsurf',y_variable='adout_qsurf',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_ustar',y_variable='adout_ustar',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Cs',y_variable='adout_Cs',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_L',y_variable='adout_L',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Rib',y_variable='adout_Rib',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Swin',y_variable='adout_Swin',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Swout',y_variable='adout_Swout',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Lwin',y_variable='adout_Lwin',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Lwout',y_variable='adout_Lwout',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Q',y_variable='adout_Q',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_ra',y_variable='adout_ra',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_rs',y_variable='adout_rs',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_H',y_variable='adout_H',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_LE',y_variable='adout_LE',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_LEliq',y_variable='adout_LEliq',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_LEveg',y_variable='adout_LEveg',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_LEsoil',y_variable='adout_LEsoil',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_LEpot',y_variable='adout_LEpot',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_LEref',y_variable='adout_LEref',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_G',y_variable='adout_G',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_Ts',y_variable='adout_Ts',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_zlcl',y_variable='adout_zlcl',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_RH_h',y_variable='adout_RH_h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_M',y_variable='adout_M',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_store(testmodel,x_variables=testx,Hx_variable='dout_dz',y_variable='adout_dz',HTy_variables=testHTy,printmode=printmodeadj)

if gradtest_store: #turn on land surface for this test, probably need radiation switch as well. If you turn it off you need to remove some variables from the testlist
    print('gradient tests of store:')
    testlist = ['h','theta','thetav','deltatheta','deltathetav','wtheta','wthetav','wthetae','wthetave','q','deltaq','wq','wqe','wqM','qsatvar','esatvar','CO2','deltaCO2','wCO2','wCO2A','wCO2R','wCO2e','wCO2M','wCOS','wCOSP','wCOSS','COS','deltaCOS','u','deltau','uw',
             'v','deltav','vw','T2m','thetamh','thetamh2','thetamh3','thetamh4','thetamh5','thetamh6','thetamh7','Tmh','Tmh2','Tmh3','Tmh4','Tmh5','Tmh6','Tmh7',
             'q2m','qmh','qmh2','qmh3','qmh4','qmh5','qmh6','qmh7','u2m','v2m','e2m','esat2m','COSmh','COSmh2','COSmh3','COSmh4','CO2mh','CO2mh2','CO2mh3','CO2mh4','COS2m','CO22m','COSsurf','CO2surf','Tsurf','thetasurf','thetavsurf','qsurf','ustar','Cs','Swin','Swout','Lwin',
             'Lwout','Q','ra','rs','H','LE','LEliq','LEveg','LEsoil','LEpot','LEref','G','lcl','RH_h','M','dz_h','Cm','Rib','L','Ts','e']
    testdstate = {}
    for item in testlist:
        testdstate['d'+item] = 1.0
    adjoint_modelling.grad_test_store(testmodel,testlist,'h',testdstate,'dout_h',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'theta',testdstate,'dout_theta',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'thetav',testdstate,'dout_thetav',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'deltatheta',testdstate,'dout_deltatheta',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'deltathetav',testdstate,'dout_deltathetav',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wtheta',testdstate,'dout_wtheta',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wthetav',testdstate,'dout_wthetav',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wthetae',testdstate,'dout_wthetae',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wthetave',testdstate,'dout_wthetave',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'q',testdstate,'dout_q',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'deltaq',testdstate,'dout_deltaq',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wq',testdstate,'dout_wq',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wqe',testdstate,'dout_wqe',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wqM',testdstate,'dout_wqM',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'qsatvar',testdstate,'dout_qsatvar',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'e',testdstate,'dout_e',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'esatvar',testdstate,'dout_esatvar',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'CO2',testdstate,'dout_CO2',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'deltaCO2',testdstate,'dout_deltaCO2',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wCO2',testdstate,'dout_wCO2',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wCO2A',testdstate,'dout_wCO2A',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wCO2R',testdstate,'dout_wCO2R',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wCO2e',testdstate,'dout_wCO2e',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wCO2M',testdstate,'dout_wCO2M',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'wCOS',testdstate,'dout_wCOS',printmode)
    if testinput.sw_ls:
        if testinput.ls_type=='ags':
            adjoint_modelling.grad_test_store(testmodel,testlist,'wCOSP',testdstate,'dout_wCOSP',printmode)
            adjoint_modelling.grad_test_store(testmodel,testlist,'wCOSS',testdstate,'dout_wCOSS',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'COS',testdstate,'dout_COS',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'deltaCOS',testdstate,'dout_deltaCOS',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'u',testdstate,'dout_u',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'deltau',testdstate,'dout_deltau',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'uw',testdstate,'dout_uw',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'v',testdstate,'dout_v',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'deltav',testdstate,'dout_deltav',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'vw',testdstate,'dout_vw',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'T2m',testdstate,'dout_T2m',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'q2m',testdstate,'dout_q2m',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'u2m',testdstate,'dout_u2m',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'v2m',testdstate,'dout_v2m',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'e2m',testdstate,'dout_e2m',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'esat2m',testdstate,'dout_esat2m',printmode)
    if testinput.sw_sl:        
        adjoint_modelling.grad_test_store(testmodel,testlist,'thetamh',testdstate,'dout_thetamh',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'thetamh2',testdstate,'dout_thetamh2',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'thetamh3',testdstate,'dout_thetamh3',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'thetamh4',testdstate,'dout_thetamh4',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'thetamh5',testdstate,'dout_thetamh5',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'thetamh6',testdstate,'dout_thetamh6',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'thetamh7',testdstate,'dout_thetamh7',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'Tmh',testdstate,'dout_Tmh',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'Tmh2',testdstate,'dout_Tmh2',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'Tmh3',testdstate,'dout_Tmh3',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'Tmh4',testdstate,'dout_Tmh4',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'Tmh5',testdstate,'dout_Tmh5',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'Tmh6',testdstate,'dout_Tmh6',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'Tmh7',testdstate,'dout_Tmh7',printmode)        
        adjoint_modelling.grad_test_store(testmodel,testlist,'qmh',testdstate,'dout_qmh',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'qmh2',testdstate,'dout_qmh2',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'qmh3',testdstate,'dout_qmh3',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'qmh4',testdstate,'dout_qmh4',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'qmh5',testdstate,'dout_qmh5',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'qmh6',testdstate,'dout_qmh6',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'qmh7',testdstate,'dout_qmh7',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'COSmh',testdstate,'dout_COSmh',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'COSmh2',testdstate,'dout_COSmh2',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'COSmh3',testdstate,'dout_COSmh3',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'COSmh4',testdstate,'dout_COSmh4',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'CO22m',testdstate,'dout_CO22m',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'CO2mh',testdstate,'dout_CO2mh',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'CO2mh2',testdstate,'dout_CO2mh2',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'CO2mh3',testdstate,'dout_CO2mh3',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'CO2mh4',testdstate,'dout_CO2mh4',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'COS2m',testdstate,'dout_COS2m',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'COSsurf',testdstate,'dout_COSsurf',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'CO2surf',testdstate,'dout_CO2surf',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'Tsurf',testdstate,'dout_Tsurf',printmode)
        adjoint_modelling.grad_test_store(testmodel,testlist,'Cm',testdstate,'dout_Cm',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'thetasurf',testdstate,'dout_thetasurf',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'thetavsurf',testdstate,'dout_thetavsurf',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'qsurf',testdstate,'dout_qsurf',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'ustar',testdstate,'dout_ustar',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'Cs',testdstate,'dout_Cs',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'Swin',testdstate,'dout_Swin',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'L',testdstate,'dout_L',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'Rib',testdstate,'dout_Rib',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'Swout',testdstate,'dout_Swout',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'Lwin',testdstate,'dout_Lwin',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'Lwout',testdstate,'dout_Lwout',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'Q',testdstate,'dout_Q',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'ra',testdstate,'dout_ra',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'rs',testdstate,'dout_rs',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'H',testdstate,'dout_H',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'LE',testdstate,'dout_LE',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'LEliq',testdstate,'dout_LEliq',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'LEveg',testdstate,'dout_LEveg',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'LEsoil',testdstate,'dout_LEsoil',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'LEpot',testdstate,'dout_LEpot',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'LEref',testdstate,'dout_LEref',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'G',testdstate,'dout_G',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'Ts',testdstate,'dout_Ts',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'zlcl',testdstate,'dout_zlcl',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'RH_h',testdstate,'dout_RH_h',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'M',testdstate,'dout_M',printmode)
    adjoint_modelling.grad_test_store(testmodel,testlist,'dz',testdstate,'dout_dz',printmode)

if adjointtest_run_cumulus:    
    print('adjoint tests of run cumulus:')
    if not testinput.sw_cu:
        raise Exception('Set sw_cu to True for adjoint tests of run_cumulus')
    testx = ['dwqe','dwqM','dwCO2e','dwCO2M','dwCOSe','dwCOSM','ddeltaq','ddeltaCO2','ddeltaCOS','dh','ddz_h','dwstar','dT_h','dP_h','dq'] #
    testHTy = (['a'+item for item in testx])
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dwqe'],Hx_variable='dq2_h',y_variable='adq2_h',HTy_variables=['adwqe'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dwqM'],Hx_variable='dq2_h',y_variable='adq2_h',HTy_variables=['adwqM'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['ddeltaq'],Hx_variable='dq2_h',y_variable='adq2_h',HTy_variables=['addeltaq'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dh'],Hx_variable='dq2_h',y_variable='adq2_h',HTy_variables=['adh'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['ddz_h'],Hx_variable='dq2_h',y_variable='adq2_h',HTy_variables=['addz_h'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dwstar'],Hx_variable='dq2_h',y_variable='adq2_h',HTy_variables=['adwstar'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=testx,Hx_variable='dq2_h',y_variable='adq2_h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dwCO2e'],Hx_variable='dCO22_h',y_variable='adCO22_h',HTy_variables=['adwCO2e'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dwCO2M'],Hx_variable='dCO22_h',y_variable='adCO22_h',HTy_variables=['adwCO2M'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['ddeltaCO2'],Hx_variable='dCO22_h',y_variable='adCO22_h',HTy_variables=['addeltaCO2'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dh'],Hx_variable='dCO22_h',y_variable='adCO22_h',HTy_variables=['adh'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['ddz_h'],Hx_variable='dCO22_h',y_variable='adCO22_h',HTy_variables=['addz_h'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dwstar'],Hx_variable='dCO22_h',y_variable='adCO22_h',HTy_variables=['adwstar'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=testx,Hx_variable='dCO22_h',y_variable='adCO22_h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dwCOSe'],Hx_variable='dCOS2_h',y_variable='adCOS2_h',HTy_variables=['adwCOSe'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dwCOSM'],Hx_variable='dCOS2_h',y_variable='adCOS2_h',HTy_variables=['adwCOSM'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['ddeltaCOS'],Hx_variable='dCOS2_h',y_variable='adCOS2_h',HTy_variables=['addeltaCOS'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dh'],Hx_variable='dCOS2_h',y_variable='adCOS2_h',HTy_variables=['adh'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['ddz_h'],Hx_variable='dCOS2_h',y_variable='adCOS2_h',HTy_variables=['addz_h'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dwstar'],Hx_variable='dCOS2_h',y_variable='adCOS2_h',HTy_variables=['adwstar'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=testx,Hx_variable='dCOS2_h',y_variable='adCOS2_h',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dq'],Hx_variable='dac',y_variable='adac',HTy_variables=['adq'],printmode=printmodeadj)
    #the reason that I test dac seperately with q, T_h and P_h is that small errors might be invisible if I perturb all at the same time, I cannot directly test the partial derivatives (e.g. dac_dq, since they might be undefined depending on an if statement.)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dT_h'],Hx_variable='dac',y_variable='adac',HTy_variables=['adT_h'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=['dP_h'],Hx_variable='dac',y_variable='adac',HTy_variables=['adP_h'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=testx,Hx_variable='dac',y_variable='adac',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=testx,Hx_variable='dM',y_variable='adM',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=testx,Hx_variable='dwqM',y_variable='adwqM',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=testx,Hx_variable='dwCO2M',y_variable='adwCO2M',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_run_cumulus(testmodel,x_variables=testx,Hx_variable='dwCOSM',y_variable='adwCOSM',HTy_variables=testHTy,printmode=printmodeadj)

if gradtest_run_cumulus: #make q high enough for this test
    print('gradient tests of run cumulus:')
    testlist = ['wqe','wqM','wCO2e','wCO2M','wCOSe','wCOSM','deltaq','deltaCO2','deltaCOS','h','dz_h','wstar','T_h','P_h','q']
    testdstate = {}
    for item in testlist:
        testdstate['d'+item] = 1.0
    adjoint_modelling.grad_test_run_cumulus(testmodel,['wqe'],'q2_h',{'dwqe':1.0},'dq2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['wqM'],'q2_h',{'dwqM':1.0},'dq2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['deltaq'],'q2_h',{'ddeltaq':1.0},'dq2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['h'],'q2_h',{'dh':1.0},'dq2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['dz_h'],'q2_h',{'ddz_h':1.0},'dq2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['wstar'],'q2_h',{'dwstar':1.0},'dq2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,testlist,'q2_h',testdstate,'dq2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['wCO2e'],'CO22_h',{'dwCO2e':1.0},'dCO22_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['wCO2M'],'CO22_h',{'dwCO2M':1.0},'dCO22_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['deltaCO2'],'CO22_h',{'ddeltaCO2':1.0},'dCO22_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['h'],'CO22_h',{'dh':1.0},'dCO22_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['dz_h'],'CO22_h',{'ddz_h':1.0},'dCO22_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['wstar'],'CO22_h',{'dwstar':1.0},'dCO22_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,testlist,'CO22_h',testdstate,'dCO22_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['wCOSe'],'COS2_h',{'dwCOSe':1.0},'dCOS2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['wCOSM'],'COS2_h',{'dwCOSM':1.0},'dCOS2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['deltaCOS'],'COS2_h',{'ddeltaCOS':1.0},'dCOS2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['h'],'COS2_h',{'dh':1.0},'dCOS2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['dz_h'],'COS2_h',{'ddz_h':1.0},'dCOS2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['wstar'],'COS2_h',{'dwstar':1.0},'dCOS2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,testlist,'COS2_h',testdstate,'dCOS2_h',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['q'],'ac',{'dq':1.0},'dac',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['T_h'],'ac',{'dT_h':1.0},'dac',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,['P_h'],'ac',{'dP_h':1.0},'dac',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,testlist,'ac',testdstate,'dac',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,testlist,'M',testdstate,'dM',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,testlist,'wqM',testdstate,'dwqM',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,testlist,'wCO2M',testdstate,'dwCO2M',printmode)
    adjoint_modelling.grad_test_run_cumulus(testmodel,testlist,'wCOSM',testdstate,'dwCOSM',printmode)

if adjointtest_jarvis_stewart: 
    if not testinput.ls_type == 'js':
        raise Exception('Set ls_type to \'js\' for adjoint tests of jarvis_stewart')
    print('adjoint tests of jarvis_stewart:')
    testx = ['dSwin','dwfc','dwwilt','dw2','dgD','desatvar','de','dtheta','drsmin','dLAI']
    testHTy = (['a'+item for item in testx])
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=['dSwin'],Hx_variable='df1',y_variable='adf1',HTy_variables=['adSwin'],printmode=printmodeadj)
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=testx,Hx_variable='df1',y_variable='adf1',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=testx,Hx_variable='df2js',y_variable='adf2js',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=testx,Hx_variable='df3',y_variable='adf3',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=testx,Hx_variable='df4',y_variable='adf4',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=testx,Hx_variable='drs_drsmin',y_variable='adrs_drsmin',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=testx,Hx_variable='drs_dLAI',y_variable='adrs_dLAI',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=testx,Hx_variable='drs_df1',y_variable='adrs_df1',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=testx,Hx_variable='drs_df2js',y_variable='adrs_df2js',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=testx,Hx_variable='drs_df3',y_variable='adrs_df3',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=testx,Hx_variable='drs_df4',y_variable='adrs_df4',HTy_variables=testHTy,printmode=printmodeadj)
    adjoint_modelling.adjoint_test_jarvis_stewart(testmodel,x_variables=testx,Hx_variable='drs',y_variable='adrs',HTy_variables=testHTy,printmode=printmodeadj)

if gradtest_jarvis_stewart: #  
    if not testinput.ls_type == 'js':
        raise Exception('Set ls_type to \'js\' for adjoint tests of jarvis_stewart')
    print('gradient tests of jarvis_stewart:')
    testlist = ['Swin','wfc','wwilt','w2','gD','esatvar','e','theta','rsmin','LAI']
    testdstate = {}
    for item in testlist:
        testdstate['d'+item] = 1.0
    adjoint_modelling.grad_test_jarvis_stewart(testmodel,testlist,'f1',testdstate,'df1',printmode)
    adjoint_modelling.grad_test_jarvis_stewart(testmodel,['wfc'],'f2js',{'dwfc': 1.0},'df2js_dwfc',printmode)
    #adjoint_modelling.grad_test_jarvis_stewart(testmodel,['wfc'],'f2js',{'dwfc': 1.0},'df2js',printmode) #this is a different test than above, since df2js can be set to 0 later in the tl
    adjoint_modelling.grad_test_jarvis_stewart(testmodel,['wwilt'],'f2js',{'dwwilt': 1.0},'df2js_dwwilt',printmode)
    adjoint_modelling.grad_test_jarvis_stewart(testmodel,['w2'],'f2js',{'dw2': 1.0},'df2js_dw2',printmode)
    adjoint_modelling.grad_test_jarvis_stewart(testmodel,testlist,'f2js',testdstate,'df2js',printmode)
    adjoint_modelling.grad_test_jarvis_stewart(testmodel,testlist,'f3',testdstate,'df3',printmode)
    adjoint_modelling.grad_test_jarvis_stewart(testmodel,testlist,'f4',testdstate,'df4',printmode)
    adjoint_modelling.grad_test_jarvis_stewart(testmodel,testlist,'rs',testdstate,'drs',printmode)

if adjointtest:
    print('initialisation tests:') #to see wether variable properly initialised to zero in tl and adjoint (start this test with empty memory)
    adjoint_modelling.adjoint_test(testmodel,x_variables=['dtheta'],Hx_variable='dthetav',y_variable='adthetav',HTy_variables=['adtheta'],Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=['dq'],Hx_variable='dthetav',y_variable='adthetav',HTy_variables=['adq'],Hx_dict='Output_tl_stat',printmode=printmodeadj)
    #if variables are included in at least one of the testx lists below it is ok, no need to put them in all of the testx lists
    print('adjoint tests:')
    testx_stat = ['dtheta','dq','dwtheta','dwq','ddeltatheta','ddeltaq','dh']
    testHTy_stat = ['adtheta','adq','adwtheta','adwq','addeltatheta','addeltaq','adh']
    testx_rr = ['ddoy','dlat','dlon','dtheta','dh','dalpha','dTs']
    testHTy_rr = ['addoy','adlat','adlon','adtheta','adh','adalpha','adTs']
    testx_rsl = ['du','dv','dtheta','dwtheta','dh','dwCOS','dCOS','dCs_start','dwCO2','dCO2','drs','dustar_start','dwthetav','dthetav','dq','dwq','dCOSmeasuring_height','dz0m','dz0h']
    testHTy_rsl = ['adu','adv','adtheta','adwtheta','adh','adwCOS','adCOS','adCs_start','adwCO2','adCO2','adrs','adustar_start','adwthetav','adthetav','adq','adwq','adCOSmeasuring_height','adz0m','adz0h']
    testx_ags = ['dthetasurf','dTs','de','dCO2','dPARfract','dSwin','dcveg','dw2','dwfc','dwwilt','dsca_sto','dLAI','dgciCOS','dTsoil','dra','dwg','dCOS','dE0','dR10']
    testHTy_ags = (['a'+item for item in testx_ags])
    testx_js = ['dgD']
    testHTy_js = (['a'+item for item in testx_js])
    testx_rls = ['dCs','dtheta','dq','dwfc','dwwilt','dwg','dLAI','dWmax','dWl','dcveg','dQ','dLambda','dTsoil','drsmin','dwsat','dw2','dT2','drssoilmin','dCGsat','db','da','dp','dC1sat','dC2ref']
    testHTy_rls = ['adCs','adtheta','adq','adwfc','adwwilt','adwg','adLAI','adWmax','adWl','adcveg','adQ','adLambda','adTsoil','adrsmin','adwsat','adw2','adT2','adrssoilmin','adCGsat','adb','ada','adp','adC1sat','adC2ref']
    testx_rml = ['dh','ddeltatheta','dwthetav','dthetav','dustar','ddeltathetav','ddeltaq','ddeltaCO2','ddeltaCOS','dM','dwtheta','dadvtheta','dwq',
                'dwqM','dadvq','dwCO2','dwCO2M','dadvCO2','dwCOS','dwCOSM','dadvCOS','dlcl','ddz_h','dgammatheta','dgammatheta2','dgammaq','dgammaCO2','dgammaCOS','ddivU',
                'du','dv','dadvu','dadvv','dfc','ddeltau','ddeltav','duw','dvw','dgammau','dgammav','ddFz','dbeta']
    testHTy_rml = (['a'+item for item in testx_rml])
    testx_ils = ['dTsoil','dwg','dWl','dTsoiltend','dwgtend','dWltend']
    testHTy_ils = ['adTsoil','adwg','adWl','adTsoiltend','adwgtend','adWltend']
    testx_iml = ['dh','dtheta','ddeltatheta','dq','ddeltaq','dCO2','dCOS','ddeltaCO2','ddeltaCOS','du','ddeltau','dv','ddeltav','ddz_h','dhtend','dthetatend',
                'ddeltathetatend','dqtend','ddeltaqtend','dCO2tend','dCOStend','ddeltaCO2tend','ddeltaCOStend','ddztend','dutend','ddeltautend','dvtend','ddeltavtend']
    testHTy_iml = (['a'+item for item in testx_iml])
    testx_rsCm = ['dTsoil','dT2','dwg','dw2','dmol_rat_ocs_atm','dairtemp','dwsat','dC_soilair_current','dfCA','dVspmax','dQ10','db_sCOSm'] #we could remove dC_soilair_current, since it is overwritten anyway
    testHTy_rsCm = ['adTsoil','adT2','adwg','adw2','admol_rat_ocs_atm','adairtemp','adwsat','adC_soilair_current','adfCA','adVspmax','adQ10','adb_sCOSm']
    testx_sto = ['dh','dtheta','dthetav','ddeltatheta','ddeltathetav','dwtheta','dwthetav','dwthetae','dwthetave','dq','ddeltaq','dwq','dwqe','dwqM','dqsatvar','desatvar','dCO2','ddeltaCO2','dwCO2','dwCO2A','dwCO2R','dwCO2e','dwCO2M','dwCOS','dwCOSP','dwCOSS','dCOS','ddeltaCOS',
                 'du','ddeltau','duw','dv','ddeltav','dvw','dT2m','dthetamh','dthetamh2','dthetamh3','dthetamh4','dthetamh5','dthetamh6','dthetamh7','dTmh','dTmh2','dTmh3','dTmh4','dTmh5','dTmh6','dTmh7',
             'dq2m','dqmh','dqmh2','dqmh3','dqmh4','dqmh5','dqmh6','dqmh7','du2m','dv2m','de2m','desat2m','dCOSmh','dCOSmh2','dCOSmh3','dCOSmh4','dCO2mh','dCO2mh2','dCO2mh3','dCO2mh4','dCOS2m','dCO22m','dCOSsurf','dCO2surf','dTsurf','dthetasurf','dthetavsurf','dqsurf','dustar','dCs','dSwin','dSwout','dLwin',
             'dLwout','dQ','dra','drs','dH','dLE','dLEliq','dLEveg','dLEsoil','dLEpot','dLEref','dG','dlcl','dRH_h','dM','ddz_h','dCm','dRib','dL','dTs','de']
    testHTy_sto = (['a'+item for item in testx_sto])
    testx_rc = ['dwqe','dwqM','dwCO2e','dwCO2M','dwCOSe','dwCOSM','ddeltaq','ddeltaCO2','ddeltaCOS','dh','ddz_h','dwstar','dT_h','dP_h','dq']
    testHTy_rc = (['a'+item for item in testx_rc])
    testx_ts = ['dwtheta_input','dwq_input','dwCO2_input','dwCOS_input'] #ts for timestep, part of tl_full_model
    testHTy_ts = (['a'+item for item in testx_ts])    
    
    testx = cp.deepcopy(testx_stat)
    testHTy = cp.deepcopy(testHTy_stat)
    #sorting is important to keep the same order in the x list as in the HTy list, the pairs must match!!!
    testx = list(sorted(set(testx + cp.deepcopy(testx_rr)))) #set to remove duplicates
    testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_rr))))
    testx = list(sorted(set(testx + cp.deepcopy(testx_rsl)))) #set to remove duplicates
    testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_rsl))))
    testx = list(sorted(set(testx + cp.deepcopy(testx_ags)))) #set to remove duplicates
    testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_ags))))
    if testinput.ls_type == 'js': 
        testx = list(sorted(set(testx + cp.deepcopy(testx_js)))) #set to remove duplicates
        testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_js))))
    testx = list(sorted(set(testx + cp.deepcopy(testx_rls)))) #set to remove duplicates
    testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_rls))))
    testx = list(sorted(set(testx + cp.deepcopy(testx_rml)))) #set to remove duplicates
    testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_rml))))
    testx = list(sorted(set(testx + cp.deepcopy(testx_ils)))) #set to remove duplicates
    testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_ils))))
    testx = list(sorted(set(testx + cp.deepcopy(testx_iml)))) #set to remove duplicates
    testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_iml))))
    if testinput.soilCOSmodeltype != None:
        testx = list(sorted(set(testx + cp.deepcopy(testx_rsCm)))) #set to remove duplicates
        testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_rsCm))))
    testx = list(sorted(set(testx + cp.deepcopy(testx_sto)))) #set to remove duplicates
    testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_sto))))
    testx = list(sorted(set(testx + cp.deepcopy(testx_rc)))) #set to remove duplicates
    testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_rc))))
    testx = list(sorted(set(testx + cp.deepcopy(testx_ts)))) #set to remove duplicates
    testHTy = list(sorted(set(testHTy + cp.deepcopy(testHTy_ts))))
    

    #adjoint_modelling.adjoint_test(testmodel,x_variables=['ddoy'],Hx_variable='dtheta',y_variable='adtheta',HTy_variables=['addoy'],Hx_dict='Output_tl_iml',printmode=printmodeadj)
    
    #statistics
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetav',y_variable='adthetav',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetav',y_variable='adthetav',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwthetav',y_variable='adwthetav',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltathetav',y_variable='addeltathetav',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dP_h',y_variable='adP_h',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dT_h',y_variable='adT_h',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsat_variable_dT_H',y_variable='adqsat_variable_dT_H',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsat_variable_dP_H',y_variable='adqsat_variable_dP_H',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsat_variable',y_variable='adqsat_variable',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dRH_h',y_variable='adRH_h',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dlcl',y_variable='adlcl',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dRHlcl',y_variable='adRHlcl',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dlcl_new',y_variable='adlcl_new',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp_lcl',y_variable='adp_lcl',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dT_lcl',y_variable='adT_lcl',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsat_variable_dp_lcl',y_variable='adqsat_variable_dp_lcl',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsat_variable_dT_lcl',y_variable='adqsat_variable_dT_lcl',HTy_variables=testHTy,Hx_dict='Output_tl_stat',printmode=printmodeadj)
    #radiation
    if(testinput.sw_rad):
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsda',y_variable='adsda',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart1_sinlea',y_variable='adpart1_sinlea',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart2_sinlea',y_variable='adpart2_sinlea',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsinlea',y_variable='adsinlea',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTa_dtheta',y_variable='adTa_dtheta',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTa_dh',y_variable='adTa_dh',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTa',y_variable='adTa',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTr',y_variable='adTr',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dSwin',y_variable='adSwin',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dSwout',y_variable='adSwout',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dLwin',y_variable='adLwin',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dLwout',y_variable='adLwout',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dQ',y_variable='adQ',HTy_variables=testHTy,Hx_dict='Output_tl_rr',printmode=printmodeadj)
#    #run surface layer
    if(testinput.sw_sl):
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dueff',y_variable='adueff',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSsurf_dwCOS',y_variable='adCOSsurf_dwCOS',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSsurf_dCOS',y_variable='adCOSsurf_dCOS',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSsurf_dCs_start',y_variable='adCOSsurf_dCs_start',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSsurf',y_variable='adCOSsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2surf',y_variable='adCO2surf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetasurf_dtheta',y_variable='adthetasurf_dtheta',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetasurf_dwtheta',y_variable='adthetasurf_dwtheta',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetasurf_dCs_start',y_variable='adthetasurf_dCs_start',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetasurf',y_variable='adthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTsurf',y_variable='adTsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        #previous formulation of qsurf:
        #adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsatsurf_rsl',y_variable='adqsatsurf_rsl',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
#        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dcq_dCs_start',y_variable='adcq_dCs_start',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
#        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dcq_drs',y_variable='adcq_drs',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
#        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dcq',y_variable='adcq',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
#        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsurf_dcq',y_variable='adqsurf_dcq',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
#        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsurf_dqsatsurf_rsl',y_variable='adqsurf_dqsatsurf_rsl',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsurf_dq',y_variable='adqsurf_dq',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsurf_dwq',y_variable='adqsurf_dwq',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsurf_dCs_start',y_variable='adqsurf_dCs_start',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsurf',y_variable='adqsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetavsurf',y_variable='adthetavsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzsl',y_variable='adzsl',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        if testinput.sw_use_ribtol:
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dRib_dthetav',y_variable='adRib_dthetav',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dRib_dzsl',y_variable='adRib_dzsl',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dRib_dthetavsurf',y_variable='adRib_dthetavsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dRib_dueff',y_variable='adRib_dueff',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dRib',y_variable='adRib',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
            #ribtol module
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dfx',y_variable='adfx',HTy_variables=testHTy,Hx_dict='Output_tl_rtl',printmode=printmodeadj)
        
        else:
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dL_dthetav',y_variable='adL_dthetav',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dL_dustar_start',y_variable='adL_dustar_start',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dL_dwthetav',y_variable='adL_dwthetav',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dL',y_variable='adL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsim_term_for_dCm_dzsl',y_variable='adpsim_term_for_dCm_dzsl',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_z0m',y_variable='adzeta_dL_z0m',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_zsl',y_variable='adzeta_dL_zsl',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_z0h',y_variable='adzeta_dL_z0h',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_2',y_variable='adzeta_dL_2',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_Tmh',y_variable='adzeta_dL_Tmh',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_qmh',y_variable='adzeta_dL_qmh',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_qmh2',y_variable='adzeta_dL_qmh2',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_COSmh',y_variable='adzeta_dL_COSmh',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_COSmh2',y_variable='adzeta_dL_COSmh2',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_COSmh3',y_variable='adzeta_dL_COSmh3',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_COSmh4',y_variable='adzeta_dL_COSmh4',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_CO2mh',y_variable='adzeta_dL_CO2mh',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_CO2mh2',y_variable='adzeta_dL_CO2mh2',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dL_CO2mh3',y_variable='adzeta_dL_CO2mh3',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_Cm_zsl',y_variable='adpsimterm_for_Cm_zsl',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_Cm_z0m',y_variable='adpsimterm_for_Cm_z0m',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCm_dzsl',y_variable='adCm_dzsl',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCm_dL',y_variable='adCm_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCm',y_variable='adCm',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsim_term_for_dCs_dzsl',y_variable='adpsim_term_for_dCs_dzsl',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_term_for_dCs_dzsl',y_variable='adpsih_term_for_dCs_dzsl',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCs_dzsl',y_variable='adCs_dzsl',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsimterm_for_dCs_dL',y_variable='adpsimterm_for_dCs_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsihterm_for_dCs_dL',y_variable='adpsihterm_for_dCs_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCs_dL',y_variable='adCs_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCs',y_variable='adCs',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dustar',y_variable='adustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCs_start',y_variable='adCs_start',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dustar_start',y_variable='adustar_start',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='duw',y_variable='aduw',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dvw',y_variable='advw',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dT2m_dthetasurf',y_variable='adT2m_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dT2m_dwtheta',y_variable='adT2m_dwtheta',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dT2m_dustar',y_variable='adT2m_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_2_L',y_variable='adpsih_2_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_z0h_L',y_variable='adpsih_z0h_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dT2m_dL',y_variable='adT2m_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dT2m',y_variable='adT2m',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetamh_dthetasurf',y_variable='adthetamh_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetamh_dwtheta',y_variable='adthetamh_dwtheta',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetamh_dustar',y_variable='adthetamh_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_Tmh_L',y_variable='adpsih_Tmh_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetamh_dL',y_variable='adthetamh_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetamh',y_variable='adthetamh',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTmh',y_variable='adTmh',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTmh7',y_variable='adTmh7',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dq2m_dqsurf',y_variable='adq2m_dqsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dq2m_dwq',y_variable='adq2m_dwq',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dq2m_dustar',y_variable='adq2m_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dq2m_dL',y_variable='adq2m_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dq2m',y_variable='adq2m',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqmh_dqsurf',y_variable='adqmh_dqsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqmh_dwq',y_variable='adqmh_dwq',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqmh_dustar',y_variable='adqmh_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_qmh_L',y_variable='adpsih_qmh_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqmh_dL',y_variable='adqmh_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqmh',y_variable='adqmh',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqmh2_dqsurf',y_variable='adqmh2_dqsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqmh2_dwq',y_variable='adqmh2_dwq',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqmh2_dustar',y_variable='adqmh2_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_qmh2_L',y_variable='adpsih_qmh2_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqmh2_dL',y_variable='adqmh2_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqmh2',y_variable='adqmh2',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOS2m_dCOSsurf',y_variable='adCOS2m_dCOSsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOS2m_dwCOS',y_variable='adCOS2m_dwCOS',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOS2m_dustar',y_variable='adCOS2m_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOS2m_dL',y_variable='adCOS2m_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOS2m',y_variable='adCOS2m',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh_dCOSsurf',y_variable='adCOSmh_dCOSsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh_dwCOS',y_variable='adCOSmh_dwCOS',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh_dustar',y_variable='adCOSmh_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dzeta_dCOSmh',y_variable='adzeta_dCOSmh',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_COSmh_L_num',y_variable='adpsih_COSmh_L_num',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh_dCOSmeasuring_height',y_variable='adCOSmh_dCOSmeasuring_height',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_COSmh_L',y_variable='adpsih_COSmh_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh_dL',y_variable='adCOSmh_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh',y_variable='adCOSmh',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh2_dCOSsurf',y_variable='adCOSmh2_dCOSsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh2_dwCOS',y_variable='adCOSmh2_dwCOS',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh2_dustar',y_variable='adCOSmh2_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_COSmh2_L',y_variable='adpsih_COSmh2_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh2_dL',y_variable='adCOSmh2_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh2',y_variable='adCOSmh2',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh3_dCOSsurf',y_variable='adCOSmh3_dCOSsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh3_dwCOS',y_variable='adCOSmh3_dwCOS',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh3_dustar',y_variable='adCOSmh3_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_COSmh3_L',y_variable='adpsih_COSmh3_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh3_dL',y_variable='adCOSmh3_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh3',y_variable='adCOSmh3',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh4_dCOSsurf',y_variable='adCOSmh4_dCOSsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh4_dwCOS',y_variable='adCOSmh4_dwCOS',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh4_dustar',y_variable='adCOSmh4_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_COSmh4_L',y_variable='adpsih_COSmh4_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh4_dL',y_variable='adCOSmh4_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOSmh4',y_variable='adCOSmh4',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh_dCO2surf',y_variable='adCO2mh_dCO2surf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh_dwCO2',y_variable='adCO2mh_dwCO2',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh_dustar',y_variable='adCO2mh_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_CO2mh_L',y_variable='adpsih_CO2mh_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh_dL',y_variable='adCO2mh_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh',y_variable='adCO2mh',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh2_dCO2surf',y_variable='adCO2mh2_dCO2surf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh2_dwCO2',y_variable='adCO2mh2_dwCO2',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh2_dustar',y_variable='adCO2mh2_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_CO2mh2_L',y_variable='adpsih_CO2mh2_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh2_dL',y_variable='adCO2mh2_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh2',y_variable='adCO2mh2',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh3_dCO2surf',y_variable='adCO2mh3_dCO2surf',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh3_dwCO2',y_variable='adCO2mh3_dwCO2',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh3_dustar',y_variable='adCO2mh3_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsih_CO2mh3_L',y_variable='adpsih_CO2mh3_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh3_dL',y_variable='adCO2mh3_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2mh3',y_variable='adCO2mh3',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='du2m_duw',y_variable='adu2m_duw',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='du2m_dustar',y_variable='adu2m_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsim_2_L',y_variable='adpsim_2_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpsim_z0m_L',y_variable='adpsim_z0m_L',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='du2m_dL',y_variable='adu2m_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='du2m',y_variable='adu2m',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dv2m_dvw',y_variable='adv2m_dvw',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dv2m_dustar',y_variable='adv2m_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dv2m_dL',y_variable='adv2m_dL',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dv2m',y_variable='adv2m',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='desat2m',y_variable='adesat2m',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='de2m',y_variable='ade2m',HTy_variables=testHTy,Hx_dict='Output_tl_rsl',printmode=printmodeadj)
#    #ags
    if(testinput.sw_ls and testinput.ls_type == 'ags'):
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2comp_dthetasurf',y_variable='adCO2comp_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)   
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgm_dthetasurf',y_variable='adgm_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)    
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dfmin0_dthetasurf',y_variable='adfmin0_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)    
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsqrtf_dthetasurf',y_variable='adsqrtf_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)    
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsqterm_dthetasurf',y_variable='adsqterm_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dfmin_dthetasurf',y_variable='adfmin_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dD0_dthetasurf',y_variable='adD0_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dDs_dTs',y_variable='adDs_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dDs_de',y_variable='adDs_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dcfrac_dTs',y_variable='adcfrac_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dcfrac_de',y_variable='adcfrac_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dco2abs',y_variable='adco2abs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dci_dthetasurf',y_variable='adci_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dci_dTs',y_variable='adci_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dci_de',y_variable='adci_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)    
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dci_dCO2',y_variable='adci_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAmmax_dthetasurf',y_variable='adAmmax_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dbetaw_dw2',y_variable='adbetaw_dw2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dbetaw_dwfc',y_variable='adbetaw_dwfc',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dbetaw_dwwilt',y_variable='adbetaw_dwwilt',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dfstr_dw2',y_variable='adfstr_dw2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dfstr_dwfc',y_variable='adfstr_dwfc',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dfstr_dwwilt',y_variable='adfstr_dwwilt',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='daexp_dthetasurf',y_variable='adaexp_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='daexp_dTs',y_variable='adaexp_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='daexp_de',y_variable='adaexp_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='daexp_dCO2',y_variable='adaexp_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAm_dthetasurf',y_variable='adAm_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAm_dTs',y_variable='adAm_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAm_de',y_variable='adAm_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAm_dCO2',y_variable='adAm_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dRdark_dthetasurf',y_variable='adRdark_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)    
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dRdark_dTs',y_variable='adRdark_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dRdark_de',y_variable='adRdark_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dRdark_dCO2',y_variable='adRdark_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dSwina_dSwin',y_variable='adSwina_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dSwina_dcveg',y_variable='adSwina_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dPAR_dSwin',y_variable='adPAR_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dPAR_dcveg',y_variable='adPAR_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dxdiv_dthetasurf',y_variable='adxdiv_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dxdiv_dCO2',y_variable='adxdiv_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dalphac_dthetasurf',y_variable='adalphac_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)    
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dalphac_dCO2',y_variable='adalphac_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAmRdark_dthetasurf',y_variable='adAmRdark_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAmRdark_dTs',y_variable='adAmRdark_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAmRdark_de',y_variable='adAmRdark_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAmRdark_dCO2',y_variable='adAmRdark_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpexp_dthetasurf',y_variable='adpexp_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj) 
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpexp_dTs',y_variable='adpexp_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpexp_de',y_variable='adpexp_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpexp_dCO2',y_variable='adpexp_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)    
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpexp_dSwin',y_variable='adpexp_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpexp_dcveg',y_variable='adpexp_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAg',y_variable='adAg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy_dthetasurf',y_variable='ady_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy_dTs',y_variable='ady_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy_de',y_variable='ady_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy_dCO2',y_variable='ady_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy_dSwin',y_variable='ady_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy_dcveg',y_variable='ady_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy1_dthetasurf',y_variable='ady1_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy1_dTs',y_variable='ady1_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy1_de',y_variable='ady1_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy1_dCO2',y_variable='ady1_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy1_dSwin',y_variable='ady1_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy1_dcveg',y_variable='ady1_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dy1_dLAI',y_variable='ady1_dLAI',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsy_dthetasurf',y_variable='adsy_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)   
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsy_dTs',y_variable='adsy_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsy_de',y_variable='adsy_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsy_dCO2',y_variable='adsy_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsy_dSwin',y_variable='adsy_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsy_dcveg',y_variable='adsy_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsy_dLAI',y_variable='adsy_dLAI',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_temporary_dthetasurf',y_variable='adAn_temporary_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_temporary_dTs',y_variable='adAn_temporary_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_temporary_de',y_variable='adAn_temporary_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_temporary_dCO2',y_variable='adAn_temporary_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_temporary_dSwin',y_variable='adAn_temporary_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_temporary_dcveg',y_variable='adAn_temporary_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_temporary_dLAI',y_variable='adAn_temporary_dLAI',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='da11_dthetasurf',y_variable='ada11_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiv1_dTs',y_variable='addiv1_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)    
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiv1_de',y_variable='addiv1_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiv2_dthetasurf',y_variable='addiv2_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiv2_dTs',y_variable='addiv2_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiv2_de',y_variable='addiv2_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiv2_dCO2',y_variable='addiv2_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart1_dthetasurf',y_variable='adpart1_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart1_dTs',y_variable='adpart1_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart1_de',y_variable='adpart1_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart1_dCO2',y_variable='adpart1_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart1_dSwin',y_variable='adpart1_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart1_dcveg',y_variable='adpart1_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart1_dw2',y_variable='adpart1_dw2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart1_dwfc',y_variable='adpart1_dwfc',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart1_dwwilt',y_variable='adpart1_dwwilt',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dpart1_dLAI',y_variable='adpart1_dLAI',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2_dthetasurf',y_variable='adgcco2_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2_dTs',y_variable='adgcco2_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2_de',y_variable='adgcco2_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2_dCO2',y_variable='adgcco2_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2_dSwin',y_variable='adgcco2_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2_dcveg',y_variable='adgcco2_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2_dw2',y_variable='adgcco2_dw2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2_dwfc',y_variable='adgcco2_dwfc',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2_dwwilt',y_variable='adgcco2_dwwilt',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2_dsca_sto',y_variable='adgcco2_dsca_sto',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2_dLAI',y_variable='adgcco2_dLAI',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgcco2',y_variable='adgcco2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_dthetasurf',y_variable='adgctCOS_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_dTs',y_variable='adgctCOS_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_de',y_variable='adgctCOS_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_dCO2',y_variable='adgctCOS_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)    
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_dSwin',y_variable='adgctCOS_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_dcveg',y_variable='adgctCOS_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_dw2',y_variable='adgctCOS_dw2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_dwfc',y_variable='adgctCOS_dwfc',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_dwwilt',y_variable='adgctCOS_dwwilt',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_dsca_sto',y_variable='adgctCOS_dsca_sto',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_dLAI',y_variable='adgctCOS_dLAI',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS_dgciCOS',y_variable='adgctCOS_dgciCOS',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dgctCOS',y_variable='adgctCOS',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drs',y_variable='adrs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drsCO2_dthetasurf',y_variable='adrsCO2_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drsCO2_dTs',y_variable='adrsCO2_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drsCO2_de',y_variable='adrsCO2_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drsCO2_dCO2',y_variable='adrsCO2_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drsCO2_dSwin',y_variable='adrsCO2_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drsCO2_dcveg',y_variable='adrsCO2_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drsCO2_dw2',y_variable='adrsCO2_dw2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drsCO2_dwfc',y_variable='adrsCO2_dwfc',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drsCO2_dwwilt',y_variable='adrsCO2_dwwilt',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drsCO2_dsca_sto',y_variable='adrsCO2_dsca_sto',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drsCO2_dLAI',y_variable='adrsCO2_dLAI',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_dthetasurf',y_variable='adAn_dthetasurf',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_dTs',y_variable='adAn_dTs',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_de',y_variable='adAn_de',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_dCO2',y_variable='adAn_dCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_dra',y_variable='adAn_dra',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_dSwin',y_variable='adAn_dSwin',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_dcveg',y_variable='adAn_dcveg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_dw2',y_variable='adAn_dw2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_dwfc',y_variable='adAn_dwfc',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_dwwilt',y_variable='adAn_dwwilt',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_dsca_sto',y_variable='adAn_dsca_sto',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dAn_dLAI',y_variable='adAn_dLAI',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dfw_dwg',y_variable='adfw_dwg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dtexp_dTsoil',y_variable='adtexp_dTsoil',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dResp_dTsoil',y_variable='adResp_dTsoil',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)    
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dResp_dwg',y_variable='adResp_dwg',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwCO2A',y_variable='adwCO2A',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)   
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwCO2R',y_variable='adwCO2R',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwCO2',y_variable='adwCO2',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwCOSP',y_variable='adwCOSP',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwCOS',y_variable='adwCOS',HTy_variables=testHTy,Hx_dict='Output_tl_ags',printmode=printmodeadj)    
    #jarvis_stewart
    if(testinput.sw_ls and testinput.ls_type == 'js'):
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='df1',y_variable='adf1',HTy_variables=testHTy,Hx_dict='Output_tl_js',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='df2js',y_variable='adf2js',HTy_variables=testHTy,Hx_dict='Output_tl_js',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='df3',y_variable='adf3',HTy_variables=testHTy,Hx_dict='Output_tl_js',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='df4',y_variable='adf4',HTy_variables=testHTy,Hx_dict='Output_tl_js',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drs_drsmin',y_variable='adrs_drsmin',HTy_variables=testHTy,Hx_dict='Output_tl_js',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drs_dLAI',y_variable='adrs_dLAI',HTy_variables=testHTy,Hx_dict='Output_tl_js',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drs_df1',y_variable='adrs_df1',HTy_variables=testHTy,Hx_dict='Output_tl_js',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drs_df2js',y_variable='adrs_df2js',HTy_variables=testHTy,Hx_dict='Output_tl_js',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drs_df3',y_variable='adrs_df3',HTy_variables=testHTy,Hx_dict='Output_tl_js',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drs_df4',y_variable='adrs_df4',HTy_variables=testHTy,Hx_dict='Output_tl_js',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drs',y_variable='adrs',HTy_variables=testHTy,Hx_dict='Output_tl_js',printmode=printmodeadj)
    #run land surface
    if(testinput.sw_ls):
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dueff',y_variable='adueff',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dra',y_variable='adra',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='desatvar',y_variable='adesatvar',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsatvar',y_variable='adqsatvar',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddesatdT_dtheta',y_variable='addesatdT_dtheta',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddqsatdT_dtheta',y_variable='addqsatdT_dtheta',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='de',y_variable='ade',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drs',y_variable='adrs',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='df2',y_variable='adf2',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='drssoil',y_variable='adrssoil',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dWlmx',y_variable='adWlmx',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dcliq',y_variable='adcliq',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp1_numerator_Ts',y_variable='adp1_numerator_Ts',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp2_numerator_Ts',y_variable='adp2_numerator_Ts',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp3_numerator_Ts',y_variable='adp3_numerator_Ts',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp4_numerator_Ts',y_variable='adp4_numerator_Ts',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp5_numerator_Ts',y_variable='adp5_numerator_Ts',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dnumerator_Ts',y_variable='adnumerator_Ts',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp1_denominator_Ts',y_variable='adp1_denominator_Ts',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp2_denominator_Ts',y_variable='adp2_denominator_Ts',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp3_denominator_Ts',y_variable='adp3_denominator_Ts',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp4_denominator_Ts',y_variable='adp4_denominator_Ts',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddenominator_Ts',y_variable='addenominator_Ts',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTs',y_variable='adTs',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='desatsurf',y_variable='adesatsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqsatsurf',y_variable='adqsatsurf',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp1_LEveg',y_variable='adp1_LEveg',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp2_LEveg_liq_soil',y_variable='adp2_LEveg_liq_soil',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dLEveg',y_variable='adLEveg',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp1_LEliq',y_variable='adp1_LEliq',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dLEliq',y_variable='adLEliq',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp1_LEsoil',y_variable='adp1_LEsoil',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dLEsoil',y_variable='adLEsoil',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dWltend',y_variable='adWltend',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dLE',y_variable='adLE',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dH',y_variable='adH',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dG',y_variable='adG',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp1_numerator_LEpot',y_variable='adp1_numerator_LEpot',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp2_numerator_LEpot',y_variable='adp2_numerator_LEpot',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dnumerator_LEpot',y_variable='adnumerator_LEpot',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dLEpot',y_variable='adLEpot',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp1_numerator_LEref',y_variable='adp1_numerator_LEref',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dp2_numerator_LEref',y_variable='adp2_numerator_LEref',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dnumerator_LEref',y_variable='adnumerator_LEref',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddenominator_LEref',y_variable='addenominator_LEref',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dLEref',y_variable='adLEref',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCG',y_variable='adCG',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTsoiltend_dCG',y_variable='adTsoiltend_dCG',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTsoiltend_dG',y_variable='adTsoiltend_dG',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTsoiltend_dTsoil',y_variable='adTsoiltend_dTsoil',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTsoiltend_dT2',y_variable='adTsoiltend_dT2',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTsoiltend',y_variable='adTsoiltend',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dC1',y_variable='adC1',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dC2_dw2',y_variable='adC2_dw2',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dC2_dwsat',y_variable='adC2_dwsat',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dC2',y_variable='adC2',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwgeq_dw2',y_variable='adwgeq_dw2',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwgeq_dwsat',y_variable='adwgeq_dwsat',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwgeq',y_variable='adwgeq',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwgtend_dLEsoil',y_variable='adwgtend_dLEsoil',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwgtend_dC1',y_variable='adwgtend_dC1',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwgtend_dC2',y_variable='adwgtend_dC2',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwgtend_dwg',y_variable='adwgtend_dwg',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwgtend_dwgeq',y_variable='adwgtend_dwgeq',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwgtend',y_variable='adwgtend',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwtheta',y_variable='adwtheta',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwq',y_variable='adwq',HTy_variables=testHTy,Hx_dict='Output_tl_rls',printmode=printmodeadj)    
#    #run mixed layer
    if(testinput.sw_ml):
        if not testinput.sw_sl:
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='duw_dustar',y_variable='aduw_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='duw_du',y_variable='aduw_du',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='duw_dv',y_variable='aduw_dv',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='duw',y_variable='aduw',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dvw_dustar',y_variable='advw_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dvw_du',y_variable='advw_du',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dvw_dv',y_variable='advw_dv',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dvw',y_variable='advw',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dws',y_variable='adws',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dw_th_ft',y_variable='adw_th_ft',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dw_q_ft',y_variable='adw_q_ft',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dw_CO2_ft',y_variable='adw_CO2_ft',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dw_COS_ft',y_variable='adw_COS_ft',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwf',y_variable='adwf',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwstar_dh',y_variable='adwstar_dh',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwstar_dwthetav',y_variable='adwstar_dwthetav',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwstar_dthetav',y_variable='adwstar_dthetav',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwstar',y_variable='adwstar',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwthetave',y_variable='adwthetave',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwe_dwthetav',y_variable='adwe_dwthetav',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwe_dustar',y_variable='adwe_dustar',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwe_dthetav',y_variable='adwe_dthetav',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwe_dh',y_variable='adwe_dh',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwe_ddeltathetav',y_variable='adwe_ddeltathetav',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwe',y_variable='adwe',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwthetae',y_variable='adwthetae',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwqe',y_variable='adwqe',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwCO2e',y_variable='adwCO2e',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwCOSe',y_variable='adwCOSe',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dhtend',y_variable='adhtend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dthetatend',y_variable='adthetatend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dqtend',y_variable='adqtend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2tend',y_variable='adCO2tend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOStend',y_variable='adCOStend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltathetatend',y_variable='addeltathetatend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltaqtend',y_variable='addeltaqtend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltaCO2tend',y_variable='addeltaCO2tend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltaCOStend',y_variable='addeltaCOStend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        if(testinput.sw_wind):
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dutend',y_variable='adutend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dvtend',y_variable='advtend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltautend',y_variable='addeltautend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltavtend',y_variable='addeltavtend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddztend',y_variable='addztend',HTy_variables=testHTy,Hx_dict='Output_tl_rml',printmode=printmodeadj)
#    #integerate land surface
    if(testinput.sw_ls):
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTsoil0',y_variable='adTsoil0',HTy_variables=testHTy,Hx_dict='Output_tl_ils',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwg0',y_variable='adwg0',HTy_variables=testHTy,Hx_dict='Output_tl_ils',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dWl0',y_variable='adWl0',HTy_variables=testHTy,Hx_dict='Output_tl_ils',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dTsoil',y_variable='adTsoil',HTy_variables=testHTy,Hx_dict='Output_tl_ils',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwg',y_variable='adwg',HTy_variables=testHTy,Hx_dict='Output_tl_ils',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dWl',y_variable='adWl',HTy_variables=testHTy,Hx_dict='Output_tl_ils',printmode=printmodeadj)
#    #integrate mixed layer
    if(testinput.sw_ml):
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dh0',y_variable='adh0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dtheta0',y_variable='adtheta0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltatheta0',y_variable='addeltatheta0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dq0',y_variable='adq0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltaq0',y_variable='addeltaq0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO20',y_variable='adCO20',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOS0',y_variable='adCOS0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltaCO20',y_variable='addeltaCO20',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltaCOS0',y_variable='addeltaCOS0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='du0',y_variable='adu0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltau0',y_variable='addeltau0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dv0',y_variable='adv0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltav0',y_variable='addeltav0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dh',y_variable='adh',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dtheta',y_variable='adtheta',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltatheta',y_variable='addeltatheta',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dq',y_variable='adq',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltaq',y_variable='addeltaq',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO2',y_variable='adCO2',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOS',y_variable='adCOS',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltaCO2',y_variable='addeltaCO2',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltaCOS',y_variable='addeltaCOS',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddz0',y_variable='addz0',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddz_h',y_variable='addz_h',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
        if testinput.sw_wind:
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='du',y_variable='adu',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltau',y_variable='addeltau',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dv',y_variable='adv',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddeltav',y_variable='addeltav',HTy_variables=testHTy,Hx_dict='Output_tl_iml',printmode=printmodeadj)
    #run soil COS mod
    if testinput.soilCOSmodeltype   == 'Sun_Ogee':
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dC_air',y_variable='adC_air',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dT_nodes',y_variable='adT_nodes',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ds_moist',y_variable='ads_moist',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dkH',y_variable='adkH',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        if testmodel.soilCOSmodel.uptakemodel == 'Ogee':
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dxCA',y_variable='adxCA',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dktot',y_variable='adktot',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ds_uptake',y_variable='ads_uptake',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ds_prod',y_variable='ads_prod',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        if testmodel.soilCOSmodel.Diffus_type == 'Sun':
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='db_sCOSm',y_variable='adb_sCOSm',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiffus_nodes_dwsat',y_variable='addiffus_nodes_dwsat',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiffus_nodes_ds_moist',y_variable='addiffus_nodes_ds_moist',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiffus_nodes_db_sCOSm',y_variable='addiffus_nodes_db_sCOSm',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiffus_nodes_dT_nodes',y_variable='addiffus_nodes_dT_nodes',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiffus_nodes',y_variable='addiffus_nodes',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dD_a',y_variable='adD_a',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
            adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='ddiffus',y_variable='addiffus',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dconduct',y_variable='adconduct',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dsource',y_variable='adsource',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dD_a_0',y_variable='adD_a_0',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='deta',y_variable='adeta',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dA_matr',y_variable='adA_matr',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dB_matr',y_variable='adB_matr',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dinvmatreq12',y_variable='adinvmatreq12',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dmatr_2_eq12',y_variable='admatr_2_eq12',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dmatr_3_eq12',y_variable='admatr_3_eq12',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dC_soilair',y_variable='adC_soilair',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dC_soilair_next',y_variable='adC_soilair_next',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dOCS_fluxes',y_variable='adOCS_fluxes',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOS_netuptake_soilsun',y_variable='adCOS_netuptake_soilsun',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dC_soilair_current',y_variable='adC_soilair_current',HTy_variables=testHTy,Hx_dict='Output_tl_rsCm',printmode=printmodeadj)

#store
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_h',y_variable='adout_h',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_theta',y_variable='adout_theta',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_wthetae',y_variable='adout_wthetae',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_deltaq',y_variable='adout_deltaq',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_esatvar',y_variable='adout_esatvar',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_wCO2A',y_variable='adout_wCO2A',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
    if testinput.sw_sl:
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_COSmh',y_variable='adout_COSmh',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_COSsurf',y_variable='adout_COSsurf',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_Lwout',y_variable='adout_Lwout',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_LEref',y_variable='adout_LEref',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_M',y_variable='adout_M',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_dz',y_variable='adout_dz',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)
    adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dout_Rib',y_variable='adout_Rib',HTy_variables=testHTy,Hx_dict='Output_tl_sto',printmode=printmodeadj)

#run cumulus
    if testinput.sw_cu:
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dq2_h',y_variable='adq2_h',HTy_variables=testHTy,Hx_dict='Output_tl_rc',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCO22_h',y_variable='adCO22_h',HTy_variables=testHTy,Hx_dict='Output_tl_rc',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dCOS2_h',y_variable='adCOS2_h',HTy_variables=testHTy,Hx_dict='Output_tl_rc',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dac',y_variable='adac',HTy_variables=testHTy,Hx_dict='Output_tl_rc',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dM',y_variable='adM',HTy_variables=testHTy,Hx_dict='Output_tl_rc',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwqM',y_variable='adwqM',HTy_variables=testHTy,Hx_dict='Output_tl_rc',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwCO2M',y_variable='adwCO2M',HTy_variables=testHTy,Hx_dict='Output_tl_rc',printmode=printmodeadj)
        adjoint_modelling.adjoint_test(testmodel,x_variables=testx,Hx_variable='dwCOSM',y_variable='adwCOSM',HTy_variables=testHTy,Hx_dict='Output_tl_rc',printmode=printmodeadj)

    if len(adjoint_modelling.failed_adj_test_list)>0:
        print('Failed adjoint tests:')
        print(adjoint_modelling.failed_adj_test_list)

if gradtest:
    #Note that perturbing divU with a large number will result in nan, as h becomes negative
    print('grad tests:')
    testlist_stat = ['theta','q','wtheta','wq','deltatheta','deltaq','h']
    testdstate_stat = {}
    for item in testlist_stat:
        testdstate_stat['d'+item] = 1.0
    testlist_rr = ['doy','lat','lon','theta','h','cc','alpha','Ts']
    testdstate_rr = {}
    for item in testlist_rr:
        testdstate_rr['d'+item] = 1.0
    testlist_rsl = ['u','v','theta','wtheta','h','wCOS','COS','wCO2','CO2','ustar','q','wq','Cs','COSmeasuring_height','z0m','z0h']
    testdstate_rsl = {'du':1.0,'dv':1.0,'dtheta':1.0,'dwtheta':1.0,'dh':1.0,'dwCOS':1.0,'dCOS':1.0,'dwCO2':1.0,'dCO2':1.0,'dustar_start':1.0,'dq':1.0,'dwq':1.0,'dCs_start':1.0,'dCOSmeasuring_height':1.0,'dz0m':1.0,'dz0h':1.0} 
    testlist_rml = ['h','deltatheta','ustar','deltaq','deltaCO2','deltaCOS','wtheta','advtheta','wq',
                'wCO2','advCO2','wCOS','advCOS','dz_h','gammatheta','gammatheta2','gammaq','gammaCO2','gammaCOS','u','v','advu','advv','fc','deltau','deltav','gammau','gammav','dFz','beta','divU'] #
    testdstate_rml = {}
    for item in testlist_rml:
        testdstate_rml['d'+item] = 1.0
    testlist_iml = ['h','theta','deltatheta','q','deltaq','CO2','COS','deltaCO2','deltaCOS','u','deltau','v','deltav','dz_h']
    testdstate_iml = {'dh':1.0,'dtheta':1.0,'ddeltatheta':1.0,'dq':1.0,'ddeltaq':1.0,'dCO2':1.0,'dCOS':1.0,'ddeltaCO2':1.0,'ddeltaCOS':1.0,'du':1.0,'ddeltau':1.0,'dv':1.0,'ddeltav':1.0,'ddz_h':1.0}
    testlist_rls = ['u','v','theta','q','wfc','wwilt','wg','LAI','Wmax','cveg','Lambda','Tsoil','rsmin','wsat','w2','T2','rssoilmin','CGsat','b','a','p','C1sat','C2ref','Q']
    testdstate_rls = {'du':1.0,'dv':1.0,'dtheta':1.0,'dq':1.0,'dwfc':1.0,'dwwilt':1.0,'dwg':1.0,'dLAI':1.0,'dWmax':1.0,'dcveg':1.0,
                  'dLambda':1.0,'dTsoil':1.0,'drsmin':1.0,'dwsat':1.0,'dw2':1.0,'dT2':1.0,'drssoilmin':1.0,'dCGsat':1.0,'db':1.0,'da':1.0,'dp':1.0,'dC1sat':1.0,'dC2ref':1.0,'dQ':1.0}
    testlist_ils = ['Tsoil','wg']
    testdstate_ils = {'dTsoil':1.0,'dwg':1.0}
    testlist_ags = ['Ts','CO2','PARfract','cveg','w2','wfc','wwilt','sca_sto','LAI','gciCOS','wg','Tsoil','COS','E0','R10']
    if not hasattr(testinput,'PARfract'):
        testlist_ags.remove('PARfract') #to avoid an error if PARfract not given
    testdstate_ags = {}
    for item in testlist_ags:
        testdstate_ags['d'+item] = 1.0 
    testlist_js = ['gD']
    testdstate_js = {}
    for item in testlist_js:
        testdstate_js['d'+item] = 1.0
    testlist_rsCm = ['Tsoil','T2','wg','w2','wsat','fCA','Vspmax','Q10','b_sCOSm'] #COSsurf and Tsurf removed from this list, as they are calculated by the surface layer. C_soilair_current is calculated from initial air concentrations, so removed as well
    testdstate_rsCm = {'dTsoil':1.0,'dT2':1.0,'dwg':1.0,'dw2':1.0,'dwsat':1.0,'dfCA':1.0,'dVspmax':1.0,'Q10':1.0,'db_sCOSm':1.0}
    testlist_sto = ['h','theta','deltatheta','wtheta','q','deltaq','wq','CO2','deltaCO2','wCO2','wCOS','COS','deltaCOS','ustar','dz_h']
    testdstate_sto = {}
    for item in testlist_sto:
        testdstate_sto['d'+item] = 1.0
    testlist_rc = ['deltaq','deltaCO2','deltaCOS','h','dz_h','q']
    testdstate_rc = {}
    for item in testlist_rc:
        testdstate_rc['d'+item] = 1.0
    testlist_ts = []
    if hasattr(testinput,'wtheta_input'): #we have to check this, because if not present, there will be a keyerror (this variable is only used if no land surface and if specified in input)
        testlist_ts.append('wtheta_input')
    if hasattr(testinput,'wq_input'):
        testlist_ts.append('wq_input')
    if hasattr(testinput,'wCO2_input'):
        testlist_ts.append('wCO2_input')
    if hasattr(testinput,'wCOS_input'):
        testlist_ts.append('wCOS_input')
    testdstate_ts = {}
    for item in testlist_ts:
        testdstate_ts['d'+item] = np.ones(testmodel.tsteps)
    #adjoint_modelling.grad_test(testinput,['wtheta'],'thetasurf',{'dwtheta':1.0},'dthetasurf','rsl')
    #adjoint_modelling.grad_test(testinput,['sca_sto'],'COSmh',{'dsca_sto':1.0},'dCOSmh','rsl')
    
    testlist = cp.deepcopy(testlist_stat)
    testdstate = cp.deepcopy(testdstate_stat)
    testlist = list(set(testlist + cp.deepcopy(testlist_rr))) #set to remove duplicates
    testdstate.update(testdstate_rr) #automaticaly no duplicates in dictionary
    testlist = list(set(testlist + cp.deepcopy(testlist_rsl))) #set to remove duplicates
    testdstate.update(testdstate_rsl)
    testlist = list(set(testlist + cp.deepcopy(testlist_js))) #set to remove duplicates
    testdstate.update(testdstate_js)
    testlist = list(set(testlist + cp.deepcopy(testlist_ags))) #set to remove duplicates
    testdstate.update(testdstate_ags)
    testlist = list(set(testlist + cp.deepcopy(testlist_rls))) #set to remove duplicates
    testdstate.update(testdstate_rls)
    testlist = list(set(testlist + cp.deepcopy(testlist_rml))) #set to remove duplicates
    testdstate.update(testdstate_rml)
    testlist = list(set(testlist + cp.deepcopy(testlist_ils))) #set to remove duplicates
    testdstate.update(testdstate_ils)
    testlist = list(set(testlist + cp.deepcopy(testlist_iml))) #set to remove duplicates
    testdstate.update(testdstate_iml)
    testlist = list(set(testlist + cp.deepcopy(testlist_rsCm))) #set to remove duplicates
    testdstate.update(testdstate_rsCm)
    testlist = list(set(testlist + cp.deepcopy(testlist_sto))) #set to remove duplicates
    testdstate.update(testdstate_sto)
    testlist = list(set(testlist + cp.deepcopy(testlist_rc))) #set to remove duplicates
    testdstate.update(testdstate_rc)
    testlist = list(set(testlist + cp.deepcopy(testlist_ts))) #set to remove duplicates, ts for timestep
    testdstate.update(testdstate_ts)
#    testlist = ['wtheta_input']
#    testdstate = {'dwtheta_input':np.ones(testmodel.tsteps)}
    
#     #statistics
    adjoint_modelling.grad_test(testinput,testlist,'thetav',testdstate,'dthetav','stat',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'wthetav',testdstate,'dwthetav','stat',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'deltathetav',testdstate,'ddeltathetav','stat',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'P_h',testdstate,'dP_h','stat',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'T_h',testdstate,'dT_h','stat',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'qsat_variable',testdstate,'dqsat_variable','stat',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'RH_h',testdstate,'dRH_h','stat',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'lcl',testdstate,'dlcl','stat',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'RHlcl',testdstate,'dRHlcl','stat',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'lcl',testdstate,'dlcl_new','stat',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'p_lcl',testdstate,'dp_lcl','stat',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'T_lcl',testdstate,'dT_lcl','stat',printmode)
#    
    #radiation
    if(testinput.sw_rad):
        adjoint_modelling.grad_test(testinput,testlist,'sda',testdstate,'dsda','rr',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'sinlea',testdstate,'dsinlea','rr',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Ta',testdstate,'dTa','rr',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Tr',testdstate,'dTr','rr',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Q',testdstate,'dQ','rr',printmode)
        
    
#    #run surface layer
    if(testinput.sw_sl):
        adjoint_modelling.grad_test(testinput,testlist,'ueff',testdstate,'dueff','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COSsurf',testdstate,'dCOSsurf','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'CO2surf',testdstate,'dCO2surf','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'thetasurf',testdstate,'dthetasurf','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Tsurf',testdstate,'dTsurf','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'qsurf',testdstate,'dqsurf','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'esurf',testdstate,'desurf','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'thetavsurf',testdstate,'dthetavsurf','rsl',printmode)
        if testinput.sw_use_ribtol:
            adjoint_modelling.grad_test(testinput,testlist,'Rib',testdstate,'dRib','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'L',testdstate,'dL','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Cm',testdstate,'dCm','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Cs',testdstate,'dCs','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'ustar',testdstate,'dustar','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'T2m',testdstate,'dT2m','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'thetamh',testdstate,'dthetamh','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Tmh',testdstate,'dTmh','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'q2m',testdstate,'dq2m','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'qmh',testdstate,'dqmh','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'qmh2',testdstate,'dqmh2','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COS2m',testdstate,'dCOS2m','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COSmh',testdstate,'dCOSmh','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COSmh2',testdstate,'dCOSmh2','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COSmh3',testdstate,'dCOSmh3','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COSmh4',testdstate,'dCOSmh4','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'CO22m',testdstate,'dCO22m','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'CO2mh',testdstate,'dCO2mh','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'CO2mh2',testdstate,'dCO2mh2','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'CO2mh3',testdstate,'dCO2mh3','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'u2m',testdstate,'du2m','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'esat2m',testdstate,'desat2m','rsl',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'e2m',testdstate,'de2m','rsl',printmode)
# 
#jarvis_stewart        
    if(testinput.sw_ls and testinput.ls_type == 'js'):
        adjoint_modelling.grad_test(testinput,testlist,'f1',testdstate,'df1','js',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'f2js',testdstate,'df2js','js',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'f3',testdstate,'df3','js',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'f4',testdstate,'df4','js',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'rs',testdstate,'drs','js',printmode)
    
#    #ags
    if(testinput.sw_ls and testinput.ls_type == 'ags'):
        adjoint_modelling.grad_test(testinput,testlist,'gcco2',testdstate,'dgcco2','ags',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'gctCOS',testdstate,'dgctCOS','ags',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'rs',testdstate,'drs','ags',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wCO2A',testdstate,'dwCO2A','ags',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wCO2R',testdstate,'dwCO2R','ags',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wCO2',testdstate,'dwCO2','ags',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wCOSP',testdstate,'dwCOSP','ags',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wCOSS',testdstate,'dwCOSS','ags',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wCOS',testdstate,'dwCOS','ags',printmode)
#    
#     #run land surface
    if(testinput.sw_ls):
        adjoint_modelling.grad_test(testinput,testlist,'ueff',testdstate,'dueff','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'ra',testdstate,'dra','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'qsatvar',testdstate,'dqsatvar','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'desatdT',testdstate,'ddesatdT_dtheta','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'e',testdstate,'de','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'rs',testdstate,'drs','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'f2',testdstate,'df2','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'rssoil',testdstate,'drssoil','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Wlmx',testdstate,'dWlmx','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Ts',testdstate,'dTs','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'esatsurf',testdstate,'desatsurf','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'qsatsurf',testdstate,'dqsatsurf','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'LEveg',testdstate,'dLEveg','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'LEliq',testdstate,'dLEliq','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'LEsoil',testdstate,'dLEsoil','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Wltend',testdstate,'dWltend','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'LE',testdstate,'dLE','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'H',testdstate,'dH','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'G',testdstate,'dG','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'LEpot',testdstate,'dLEpot','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'LEref',testdstate,'dLEref','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'CG',testdstate,'dCG','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Tsoiltend',testdstate,'dTsoiltend','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'C1',testdstate,'dC1','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'C2',testdstate,'dC2','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wgeq',testdstate,'dwgeq','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wgtend',testdstate,'dwgtend','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wtheta',testdstate,'dwtheta','rls',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wq',testdstate,'dwq','rls',printmode)
         
#    #run mixed layer
    if(testinput.sw_ml):
        if not testinput.sw_sl:
            adjoint_modelling.grad_test(testinput,testlist,'uw',testdstate,'duw','rml',printmode)
            adjoint_modelling.grad_test(testinput,testlist,'vw',testdstate,'dvw','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'ws',testdstate,'dws','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'w_th_ft',testdstate,'dw_th_ft','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'w_q_ft',testdstate,'dw_q_ft','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'w_CO2_ft',testdstate,'dw_CO2_ft','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'w_COS_ft',testdstate,'dw_COS_ft','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'w_th_ft',testdstate,'dw_th_ft','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wf',testdstate,'dwf','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wstar',testdstate,'dwstar','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wthetave',testdstate,'dwthetave','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wthetae',testdstate,'dwthetae','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wqe',testdstate,'dwqe','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wCO2e',testdstate,'dwCO2e','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wCOSe',testdstate,'dwCOSe','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'htend',testdstate,'dhtend','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'thetatend',testdstate,'dthetatend','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'qtend',testdstate,'dqtend','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'CO2tend',testdstate,'dCO2tend','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COStend',testdstate,'dCOStend','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltathetatend',testdstate,'ddeltathetatend','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltaqtend',testdstate,'ddeltaqtend','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltaCO2tend',testdstate,'ddeltaCO2tend','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltaCOStend',testdstate,'ddeltaCOStend','rml',printmode)
        if(testinput.sw_wind):
            adjoint_modelling.grad_test(testinput,testlist,'utend',testdstate,'dutend','rml',printmode)
            adjoint_modelling.grad_test(testinput,testlist,'vtend',testdstate,'dvtend','rml',printmode)
            adjoint_modelling.grad_test(testinput,testlist,'deltautend',testdstate,'ddeltautend','rml',printmode)
            adjoint_modelling.grad_test(testinput,testlist,'deltavtend',testdstate,'ddeltavtend','rml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'dztend',testdstate,'ddztend','rml',printmode)
        
    
#    #integrate land surface
    if(testinput.sw_ls):
        adjoint_modelling.grad_test(testinput,testlist,'Tsoil',testdstate,'dTsoil','ils',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wg',testdstate,'dwg','ils',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Wl',testdstate,'dWl','ils',printmode)
        
#    
#    #integrate mixed layer
    if(testinput.sw_ml):
        adjoint_modelling.grad_test(testinput,testlist,'h0',testdstate,'dh0','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'theta0',testdstate,'dtheta0','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltatheta0',testdstate,'ddeltatheta0','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'q0',testdstate,'dq0','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltaq0',testdstate,'ddeltaq0','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'CO20',testdstate,'dCO20','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COS0',testdstate,'dCOS0','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltaCO20',testdstate,'ddeltaCO20','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltaCOS0',testdstate,'ddeltaCOS0','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'u0',testdstate,'du0','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltau0',testdstate,'ddeltau0','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'v0',testdstate,'dv0','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltav0',testdstate,'ddeltav0','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'h',testdstate,'dh','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'theta',testdstate,'dtheta','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltatheta',testdstate,'ddeltatheta','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'q',testdstate,'dq','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltaq',testdstate,'ddeltaq','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'CO2',testdstate,'dCO2','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COS',testdstate,'dCOS','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltaCO2',testdstate,'ddeltaCO2','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'deltaCOS',testdstate,'ddeltaCOS','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'dz0',testdstate,'ddz0','iml',printmode)
        if testinput.sw_wind:
            adjoint_modelling.grad_test(testinput,testlist,'u',testdstate,'du','iml',printmode)
            adjoint_modelling.grad_test(testinput,testlist,'deltau',testdstate,'ddeltau','iml',printmode)
            adjoint_modelling.grad_test(testinput,testlist,'v',testdstate,'dv','iml',printmode)
            adjoint_modelling.grad_test(testinput,testlist,'deltav',testdstate,'ddeltav','iml',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'dz_h',testdstate,'ddz_h','iml',printmode)

    if testinput.soilCOSmodeltype   == 'Sun_Ogee':
        #run soil COS mod
        adjoint_modelling.grad_test(testinput,testlist,'C_air',testdstate,'dC_air','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'T_nodes',testdstate,'dT_nodes','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'s_moist',testdstate,'ds_moist','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'kH',testdstate,'dkH','rsCm',printmode)
        if testinput.uptakemodel == 'Ogee':
            adjoint_modelling.grad_test(testinput,testlist,'xCA',testdstate,'dxCA','rsCm',printmode)
            adjoint_modelling.grad_test(testinput,testlist,'ktot',testdstate,'dktot','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'s_uptake',testdstate,'ds_uptake','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'s_prod',testdstate,'ds_prod','rsCm',printmode)
        if testinput.Diffus_type == ('Sun'):
            adjoint_modelling.grad_test(testinput,testlist,'b_sCOSm',testdstate,'db_sCOSm','rsCm',printmode)
            adjoint_modelling.grad_test(testinput,testlist,'diffus_nodes',testdstate,'ddiffus_nodes','rsCm',printmode)
            adjoint_modelling.grad_test(testinput,testlist,'D_a',testdstate,'dD_a','rsCm',printmode)
            adjoint_modelling.grad_test(testinput,testlist,'diffus',testdstate,'ddiffus','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'conduct',testdstate,'dconduct','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'source',testdstate,'dsource','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'D_a_0',testdstate,'dD_a_0','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'eta',testdstate,'deta','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'A_matr',testdstate,'dA_matr','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'B_matr',testdstate,'dB_matr','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'invmatreq12',testdstate,'dinvmatreq12','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'matr_2_eq12',testdstate,'dmatr_2_eq12','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'matr_3_eq12',testdstate,'dmatr_3_eq12','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'C_soilair',testdstate,'dC_soilair','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'C_soilair_next',testdstate,'dC_soilair_next','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'OCS_fluxes',testdstate,'dOCS_fluxes','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COS_netuptake_soilsun',testdstate,'dCOS_netuptake_soilsun','rsCm',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'C_soilair_current',testdstate,'dC_soilair_current','rsCm',printmode)
        
    #store
    adjoint_modelling.grad_test(testinput,testlist,'h',testdstate,'dout_h','sto',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'thetav',testdstate,'dout_thetav','sto',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'deltathetav',testdstate,'dout_deltathetav','sto',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'wtheta',testdstate,'dout_wtheta','sto',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'deltaCO2',testdstate,'dout_deltaCO2','sto',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'COS',testdstate,'dout_COS','sto',printmode)
    if testinput.sw_sl:
        adjoint_modelling.grad_test(testinput,testlist,'thetamh',testdstate,'dout_thetamh','sto',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'Tmh',testdstate,'dout_Tmh','sto',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COSmh',testdstate,'dout_COSmh','sto',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COSsurf',testdstate,'dout_COSsurf','sto',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'Lwin',testdstate,'dout_Lwin','sto',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'dz',testdstate,'dout_dz','sto',printmode)
    adjoint_modelling.grad_test(testinput,testlist,'Rib',testdstate,'dout_Rib','sto',printmode)

    #run cumulus
    if(testinput.sw_cu):
        adjoint_modelling.grad_test(testinput,['deltaq'],'q2_h',{'ddeltaq':1.0},'dq2_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,['h'],'q2_h',{'dh':1.0},'dq2_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,['dz_h'],'q2_h',{'ddz_h':1.0},'dq2_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'q2_h',testdstate,'dq2_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,['deltaCO2'],'CO22_h',{'ddeltaCO2':1.0},'dCO22_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,['h'],'CO22_h',{'dh':1.0},'dCO22_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,['dz_h'],'CO22_h',{'ddz_h':1.0},'dCO22_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'CO22_h',testdstate,'dCO22_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,['deltaCOS'],'COS2_h',{'ddeltaCOS':1.0},'dCOS2_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,['h'],'COS2_h',{'dh':1.0},'dCOS2_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,['dz_h'],'COS2_h',{'ddz_h':1.0},'dCOS2_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'COS2_h',testdstate,'dCOS2_h','rc',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'ac',testdstate,'dac','rc',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'M',testdstate,'dM','rc',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wqM',testdstate,'dwqM','rc',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wCO2M',testdstate,'dwCO2M','rc',printmode)
        adjoint_modelling.grad_test(testinput,testlist,'wCOSM',testdstate,'dwCOSM','rc',printmode)
    if len(adjoint_modelling.failed_grad_test_list)>0:
        print('Failed grad tests:')
        print(adjoint_modelling.failed_grad_test_list)
    #    
if manual_adjointtest:
#    adjoint_modelling.adjoint_test_run_land_surface_manual(testmodel)
    adjoint_modelling.adjoint_test_surf_lay_manual(testmodel)
    adjoint_modelling.adjoint_test_ags_manual(testmodel)
    
print('All performed tests pass:'+str(adjoint_modelling.all_tests_pass))  

#adjoint_modelling.grad_test(testinput,['deltatheta'],'COSmh',{'ddeltatheta': 1.0},'dCOSmh','rsl',printmode = 'absolute') #to test sensitivity of COSmh to deltatheta
#adjoint_modelling.adjoint_test(testmodel,x_variables=['ddeltatheta'],Hx_variable='dCOSmh',y_variable='adCOSmh',HTy_variables=['addeltatheta'],Hx_dict='Output_tl_rsl')